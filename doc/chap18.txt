  
  [1X18 [33X[0;0YEdge colourings[133X[101X
  
  [33X[0;0YThis  chapter  is concerned with edge-coloured (twisted) polygonal complexes
  and  in  particular simplicial surfaces. The first section ([14X18.1[114X) deals with
  the  definition  of  arbitrary edge-colourings and the methods to access its
  colouring.[133X
  
  [33X[0;0YThe  second  section  ([14X18.2[114X)  explains  how  the  drawing  functionality for
  polygonal  surfaces  without  edge  ramifications  (compare section [14X16.2[114X for
  details) is extended for edge-coloured ramified polygonal surfaces.[133X
  
  [33X[0;0YFinally  section  [14X18.3[114X  deals  with the isomorphism problem of edge-coloured
  polygonal complexes.[133X
  
  
  [1X18.1 [33X[0;0YGeneral definition[133X[101X
  
  [33X[0;0YThis   section  describes  how  an  edge-colouring  is  implemented  in  the
  [9XSimplicialSurfaces[109X-package.[133X
  
  [33X[0;0YAn [9XEdgeColouredTwistedPolygonalComplex[109X ([14X18.1-2[114X) consists of:[133X
  
  [30X    [33X[0;6Ya  twisted  polygonal  complex,  accessible by [9XTwistedPolygonalComplex[109X
        ([14X18.1-3[114X)[133X
  
  [30X    [33X[0;6Yan  edge  colouring,  which can be accessed by [9XColoursOfEdges[109X ([14X18.1-4[114X)
        and [9XEdgesOfColours[109X ([14X18.1-5[114X)[133X
  
  [33X[0;0YSpecialisations         like         [9XEdgeColouredPolygonalComplex[109X        and
  [9XEdgeColouredSimplicialSurface[109X exist as well and behave in the expected way.[133X
  
  [33X[0;0YAs an illustration we consider a pyramid with square base.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xpyr := PolygonalSurfaceByDownwardIncidence([127X[104X
    [4X[25X>[125X [27X    [ , [1,2], [2,3], [3,4], [1,4], [2,10], [3,10], [4,10], [1,10] ],[127X[104X
    [4X[25X>[125X [27X    [ [2,3,4,5], , [2,6,9], [3,6,7], [4,7,8], [5,8,9] ] );;[127X[104X
  [4X[32X[104X
  
  [33X[0;0YWe  would  like  to  colour the edges in the following way: Image omitted in
  terminal  text  To do that we describe the colours by positive integers (for
  example 1,2,4). We can encode the edge colouring in two ways:[133X
  
  [31X1[131X   [33X[0;6YWe can give a list that encodes which edge has which colour.[133X
  
  [4X      [32X  Example  [32X[104X
          [4X[25Xgap>[125X [27XcolOfEdges := [,2,1,1,2,4,1,4,2];[127X[104X
          [4X[28X[ , 2, 1, 1, 2, 4, 1, 4, 2 ][128X[104X
        [4X[32X[104X
  
        [33X[0;6YThe entry at position [3Xedge[103X denotes the colour of [3Xedge[103X.[133X
  
  [31X2[131X   [33X[0;6YWe can give a edge colour class for each colour (as list).[133X
  
  [4X      [32X  Example  [32X[104X
          [4X[25Xgap>[125X [27XcolClasses := [ [ 3, 4, 7 ], [ 2, 5, 9 ],, [ 6, 8 ] ];[127X[104X
          [4X[28X[ [ 3, 4, 7 ], [ 2, 5, 9 ],, [ 6, 8 ] ][128X[104X
        [4X[32X[104X
  
  [33X[0;0YBoth of those can be used to construct the edge coloured polygonal complex:[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XcolPyr := EdgeColouredPolygonalComplex( pyr, colOfEdges );;[127X[104X
    [4X[25Xgap>[125X [27XcolPyrAlt := EdgeColouredPolygonalComplex( pyr, colClasses );;[127X[104X
    [4X[25Xgap>[125X [27XcolPyr = colPyrAlt;[127X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  [33X[0;0YBoth the polygonal surface and the colouring can be accessed.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XPolygonalComplex(colPyr) = pyr;[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XColoursOfEdges(colPyr) = colOfEdges;[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XEdgesOfColours(colPyr) = colClasses;[127X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  [33X[0;0YA quick access to the used colours is also available:[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XColours(colPyr);[127X[104X
    [4X[28X[ 1, 2, 4 ][128X[104X
  [4X[32X[104X
  
  [1X18.1-1 IsEdgeColouredTwistedPolygonalComplex[101X
  
  [33X[1;0Y[29X[2XIsEdgeColouredTwistedPolygonalComplex[102X( [3Xobject[103X ) [32X filter[133X
  [33X[1;0Y[29X[2XIsEdgeColouredPolygonalComplex[102X( [3Xobject[103X ) [32X property[133X
  [33X[1;0Y[29X[2XIsEdgeColouredSimplicialSurface[102X( [3XcolComplex[103X ) [32X property[133X
  [6XReturns:[106X  [33X[0;10Y[9Xtrue[109X or [9Xfalse[109X[133X
  
  [33X[0;0YCheck if a given object is an [9XIsEdgeColouredTwistedPolygonalComplex[109X. This is
  the  case  if  it  consists  of  a  twisted  polygonal  complex  and an edge
  colouring, accessible by [9XTwistedPolygonalComplex[109X ([14X18.1-3[114X) and [9XColoursOfEdges[109X
  ([14X18.1-4[114X) respectively.[133X
  
  [33X[0;0YIn  addition there are some properties of the type [9XIsEdgeColoured[109X[13XThing[113X which
  check  if  the  underlying  twisted  polygonal  complex  fulfills [13XThing[113X. For
  example  [9XIsEdgeColouredSimplicialSurface[109X  checks if the underlying polygonal
  complex is a simplicial surface.[133X
  
  [1X18.1-2 EdgeColouredTwistedPolygonalComplex[101X
  
  [33X[1;0Y[29X[2XEdgeColouredTwistedPolygonalComplex[102X( [3Xcomplex[103X, [3Xcolouring[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XEdgeColouredTwistedPolygonalComplexNC[102X( [3Xcomplex[103X, [3Xcolouring[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XEdgeColouredPolygonalComplex[102X( [3Xcomplex[103X, [3Xcolouring[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XEdgeColouredPolygonalComplexNC[102X( [3Xcomplex[103X, [3Xcolouring[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XEdgeColouredSimplicialSurface[102X( [3Xsurface[103X, [3Xcolouring[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XEdgeColouredSimplicialSurfaceNC[102X( [3Xsurface[103X, [3Xcolouring[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Yan [9XEdgeColouredTwistedPolygonalComplex[109X[133X
  
  [33X[0;0YConstruct  an  edge coloured (twisted) polygonal complex. The edge colouring
  can be given in one of two ways:[133X
  
  [31X1[131X   [33X[0;6YAs  a  list [3Xcolouring[103X of positive integers. For every edge [3Xedge[103X in the
        given  [3Xcomplex[103X  the  entry [3Xcolouring[edge][103X contains the colour of [3Xedge[103X
        (we encode colours by positive integers).[133X
  
  [31X2[131X   [33X[0;6YAs a list [3Xcolouring[103X of sets of positive integers. For every colour [3Xcol[103X
        (the   colours   are   described   by  positive  integers)  the  entry
        [3Xcolouring[col][103X contains the set of all edges with colour [3Xcol[103X.[133X
  
  [33X[0;0YThe more specific variations enforce their more restrictive type on [3Xcomplex[103X,
  e.g.  [9XEdgeColouredSimplicialSurface[109X  requires  [3Xcomplex[103X  to  be  a simplicial
  surface.[133X
  
  [33X[0;0YNote:  If the given [3Xcomplex[103X is already edge coloured, it will be stripped of
  this colouring first.[133X
  
  [33X[0;0YAs  illustration we colour the pyramid from the start of section [14X18.1[114X in two
  different ways and use both ways of encoding the colouring.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xpyr := PolygonalSurfaceByDownwardIncidence([127X[104X
    [4X[25X>[125X [27X    [ , [1,2], [2,3], [3,4], [1,4], [2,10], [3,10], [4,10], [1,10] ],[127X[104X
    [4X[25X>[125X [27X    [ [2,3,4,5], , [2,6,9], [3,6,7], [4,7,8], [5,8,9] ] );;[127X[104X
  [4X[32X[104X
  
  [33X[0;0YImage  omitted  in  terminal  text  We  use the first method of encoding the
  colouring (based on the edges):[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XcolPyr1 := EdgeColouredPolygonalComplex(pyr, [,2,1,1,2,3,1,3,2]);;[127X[104X
  [4X[32X[104X
  
  [33X[0;0YImage  omitted in terminal text We can also pick a different colouring which
  we will define by the second method of encoding:[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XcolPyr2 := EdgeColouredPolygonalComplex(pyr, [[2,6],[3,7],,[4,8],[5,9]]);;[127X[104X
  [4X[32X[104X
  
  [33X[0;0YImage omitted in terminal text[133X
  
  [33X[0;0YThe NC-version does not check whether the given [3Xcolouring[103X is consistent with
  the edges of [3Xcomplex[103X, i.e.[133X
  
  [30X    [33X[0;6YDoes every edge of [3Xcomplex[103X appear?[133X
  
  [30X    [33X[0;6YIs every purported edge of [3Xcolouring[103X an edge of [3Xcomplex[103X?[133X
  
  [1X18.1-3 TwistedPolygonalComplex[101X
  
  [33X[1;0Y[29X[2XTwistedPolygonalComplex[102X( [3XcolComplex[103X ) [32X attribute[133X
  [33X[1;0Y[29X[2XPolygonalComplex[102X( [3XcolComplex[103X ) [32X attribute[133X
  [33X[1;0Y[29X[2XSimplicialSurface[102X( [3XcolComplex[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10Ya twisted polygonal complex[133X
  
  [33X[0;0YReturn  the underlying twisted polygonal complex of an edge coloured twisted
  polygonal  complex.  The  other  variants  return  the  same object but will
  guarantee the more specific type.[133X
  
  [33X[0;0YFor example both edge coloured pyramids from [14X18.1-2[114X have the same underlying
  polygonal complex.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XPolygonalComplex(colPyr1) = PolygonalComplex(colPyr2);[127X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  [1X18.1-4 ColoursOfEdges[101X
  
  [33X[1;0Y[29X[2XColoursOfEdges[102X( [3XcolComplex[103X ) [32X attribute[133X
  [33X[1;0Y[29X[2XColourOfEdge[102X( [3XcolComplex[103X, [3Xedge[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XColourOfEdgeNC[102X( [3XcolComplex[103X, [3Xedge[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya list of positive integers / a positive integer[133X
  
  [33X[0;0YThe  method  [9XColourOfEdge[109X([3XcolComplex[103X,  [3Xedge[103X)  returns  the  colour  of [3Xedge[103X,
  represented by a positive integer. The NC-version does not check whether the
  given [3Xedge[103X is an edge of the underlying twisted polygonal complex.[133X
  
  [33X[0;0YThe  attribute [9XColoursOfEdges[109X([3XcolComplex[103X) collects all of those colours in a
  list     that     is     indexed     by     the     edge     labels,    i.e.
  [9XColoursOfEdges[109X([3XcolComplex[103X)[[3Xedge[103X] = [9XColourOfEdge[109X([3XcolComplex[103X, [3Xedge[103X). All other
  positions of this list are not bound.[133X
  
  [33X[0;0YFor  example  consider  the coloured pyramid from the start of section [14X18.1[114X.
  Image omitted in terminal text[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XColourOfEdge( colPyr, 2 );[127X[104X
    [4X[28X2[128X[104X
    [4X[25Xgap>[125X [27XColourOfEdge( colPyr, 7);[127X[104X
    [4X[28X1[128X[104X
    [4X[25Xgap>[125X [27XColoursOfEdges( colPyr );[127X[104X
    [4X[28X[ , 2, 1, 1, 2, 4, 1, 4, 2 ][128X[104X
  [4X[32X[104X
  
  [1X18.1-5 EdgesOfColours[101X
  
  [33X[1;0Y[29X[2XEdgesOfColours[102X( [3XcolComplex[103X ) [32X attribute[133X
  [33X[1;0Y[29X[2XEdgesOfColour[102X( [3XcolComplex[103X, [3Xcolour[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya list of sets of positive integers / a set of positive integers[133X
  
  [33X[0;0YThe  method  [9XEdgesOfColour[109X([3XcolComplex[103X,  [3Xcolour[103X) returns the set of all edges
  with  colour  [3Xcolour[103X.  If  a  colour  is not used in the given edge coloured
  twisted polygonal complex, the empty set is returned.[133X
  
  [33X[0;0YThe  attribute  [9XEdgesOfColours[109X([3XcolComplex[103X)  collects  all of these sets in a
  list  that  is  indexed  by  the  colours (given as positive integers), i.e.
  [9XEdgesOfColours[109X([3XcolComplex[103X)[[3Xcolour[103X]  = [9XEdgesOfColour[109X([3XcolComplex[103X, [3Xcolour[103X). All
  other positions of this list are not bound.[133X
  
  [33X[0;0YFor  example  consider  the coloured pyramid from the start of section [14X18.1[114X.
  Image omitted in terminal text[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XEdgesOfColour( colPyr, 1 );[127X[104X
    [4X[28X[ 3, 4, 7 ][128X[104X
    [4X[25Xgap>[125X [27XEdgesOfColour( colPyr, 4);[127X[104X
    [4X[28X[ 6, 8 ][128X[104X
    [4X[25Xgap>[125X [27XEdgesOfColour( colPyr, 5 );[127X[104X
    [4X[28X[][128X[104X
    [4X[25Xgap>[125X [27XEdgesOfColours( colPyr );[127X[104X
    [4X[28X[ [ 3, 4, 7 ], [ 2, 5, 9 ],, [ 6, 8 ] ][128X[104X
  [4X[32X[104X
  
  [1X18.1-6 Colours[101X
  
  [33X[1;0Y[29X[2XColours[102X( [3XcolComplex[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10Ya set of positive integers[133X
  
  [33X[0;0YReturn  the set of all edge colours that are used in the given edge coloured
  twisted polygonal complex.[133X
  
  
  [1X18.2 [33X[0;0YDrawing edge coloured surfaces[133X[101X
  
  [33X[0;0YThe  drawing  functionality  for ramified polygonal surfaces in section [14X16.2[114X
  can  also  be  used  for  edge  coloured polygonal complexes (as long as the
  underlying polygonal complex is a ramified polygonal surface).[133X
  
  [33X[0;0YThe  main  difference  to  the  previous  method  is  that  it  is much more
  convenient  to  change  edge  lengths  and  colours.  Consider for example a
  coloured tetrahedron.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xtetra := Tetrahedron();;[127X[104X
    [4X[25Xgap>[125X [27XcolTetra := EdgeColouredPolygonalComplex(tetra, [1,2,3,3,2,1]);;[127X[104X
    [4X[25Xgap>[125X [27Xpr := DrawSurfaceToTikz( colTetra, "ColouredTetrahedron", rec(scale:=2.5) );;[127X[104X
  [4X[32X[104X
  
  [33X[0;0YImage  omitted  in terminal text If we now want to change edge lengths (such
  that  edges  of  the  same colour have the same length), we can do this very
  easily:[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xpr.edgeColourClassLengths := [5,4,3];;[127X[104X
    [4X[25Xgap>[125X [27Xpr.scale := 1;;[127X[104X
    [4X[25Xgap>[125X [27XDrawSurfaceToTikz( colTetra, "ColouredTetrahedron_rectangular", pr );;[127X[104X
  [4X[32X[104X
  
  [33X[0;0YImage  omitted  in terminal text The colours can also be changed in the same
  fashion.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xpr.edgeColourClassColours := ["cyan","olive","magenta"];[127X[104X
    [4X[25Xgap>[125X [27XDrawSurfaceToTikz( colTetra, "ColouredTetrahedron_coloured", pr );[127X[104X
  [4X[32X[104X
  
  [33X[0;0YImage omitted in terminal text[133X
  
  [33X[0;0YWhile it is very easy to modify all edges of the same colour simultaneously,
  it  becomes  harder  to  change them individually. For example we can't just
  make the first and fourth edge longer.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xpr.edgeLengths;[127X[104X
    [4X[28X[ 5, 4, 3, 3, 4, 5 ][128X[104X
    [4X[25Xgap>[125X [27Xpr.edgeLengths := [4,4,3,4,4,5];;[127X[104X
    [4X[25Xgap>[125X [27XDrawSurfaceToTikz( colTetra, "ColouredTetrahedron_modLengths", pr );[127X[104X
    [4X[25Xgap>[125X [27Xpr.edgeLengths;[127X[104X
    [4X[28X[ 5, 4, 3, 3, 4, 5 ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YTo  change individual edges the colour connection has to be ignored. This is
  possible by using the entry [3XedgeColourClassActive[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xpr.edgeColourClassActive := false;;[127X[104X
    [4X[25Xgap>[125X [27Xpr.edgeLengths := [4,4,3,4,4,5];;[127X[104X
    [4X[25Xgap>[125X [27XDrawSurfaceToTikz( colTetra, "ColouredTetrahedron_modLengths", pr );[127X[104X
  [4X[32X[104X
  
  [33X[0;0YImage omitted in terminal text[133X
  
  [1X18.2-1 DrawSurfaceToTikz[101X
  
  [33X[1;0Y[29X[2XDrawSurfaceToTikz[102X( [3XcolRamSurf[103X, [3XfileName[103X[, [3XprintRecord[103X] ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya record[133X
  
  [33X[0;0YDraw  the  net  of  the  given [3XcolRamSurf[103X into a tex-file (using TikZ). This
  method  extends  the  drawing  method  for  polygonal  surfaces without edge
  ramifications  (compare  [14X16.2-1[114X)  by  respecting  the edge colour classes of
  [3XcolRamSurf[103X.  An  introduction the the usage of the additional parameters can
  be found at the start of section [14X18.2[114X.[133X
  
  [30X    [33X[0;6YIf  the  given  [3XfileName[103X  does not end in [13X.tex[113X the ending [13X.tex[113X will be
        added to it.[133X
  
  [30X    [33X[0;6YThe  given  file  will  be  overwritten  without  asking if it already
        exists.  If  you  don't  have  permission  to write in that file, this
        method will throw an error.[133X
  
  [30X    [33X[0;6YThe   particulars   of   the  drawing  are  determined  by  the  given
        [3XprintRecord[103X. If this is not given, the default settings are used.[133X
  
  [30X    [33X[0;6YThe  [3XprintRecord[103X  will  be  modified  and  returned by this method. It
        contains the data to recreate the drawing of the surface.[133X
  
  [33X[0;0YThere  are  several  parameters  to  change  the output of this method, from
  cosmetic  changes to exactly controlling in which order the faces are drawn.
  For  the  standard  parameters,  see  [14X16.2-1[114X.  For  edge  coloured  ramified
  polygonal surfaces the [13XedgeColourClass[113X-parameters are added:[133X
  
  [30X    [33X[0;6Y[13XedgeColourClassActive[113X:   If   this   parameter   is  [9Xfalse[109X  the  other
        [13XedgeColourClass[113X-parameters have no effect. By default, it is [9Xtrue[109X.[133X
  
  [30X    [33X[0;6Y[13XedgeColourClassLengths[113X:  This  parameter  is  a list with an entry for
        every  colour  of [3XcolRamSurf[103X. The entry of a colour defines the length
        of  all  edges with this colour. This parameter overwrites [13XedgeLengths[113X
        as long as [13XedgeColourClassActive[113X is [9Xtrue[109X.[133X
  
  [30X    [33X[0;6Y[13XedgeColourClassColours[113X:  This  parameter  is  a list with an entry for
        every  colour of [3XcolRamSurf[103X. The entry of a colour defines the drawing
        colour  for  all edges of this colour class. This parameter overwrites
        [13XedgeColours[113X as long as [13XedgeColourClassActive[113X is [9Xtrue[109X.[133X
  
  
  [1X18.3 [33X[0;0YIsomorphisms between edge-coloured polygonal complexes[133X[101X
  
  [33X[0;0YAn  edge-coloured  polygonal  complex  can  be  completely  described by the
  incidence  structure  of its polygonal complex and the edge colouring. These
  can  be  encoded in an extended incidence graph. To do so, we start with the
  incidence graph from section [14X15.2[114X and add a vertex for each colour, which is
  connected to all edges of this colour.[133X
  
  [33X[0;0YThen  the  isomorphism  problem can be decided if one of the following graph
  packages is loaded: [9XDigraphs[109X, [9XGRAPE[109X and [9XNautyTracesInterface[109X.[133X
  
  [1X18.3-1 ColourIncidenceDigraphsGraph[101X
  
  [33X[1;0Y[29X[2XColourIncidenceDigraphsGraph[102X( [3XcolComplex[103X ) [32X attribute[133X
  [33X[1;0Y[29X[2XColourIncidenceGrapeGraph[102X( [3XcolComplex[103X ) [32X attribute[133X
  [33X[1;0Y[29X[2XColourIncidenceNautyGraph[102X( [3XcolComplex[103X ) [32X attribute[133X
  [6XReturns:[106X  [33X[0;10Ya graph as defined in the package [9XDigraphs[109X[133X
  
  [33X[0;0YReturn the colour-extended incidence graph (a coloured, undirected graph) of
  the given edge coloured polygonal complex. It is defined as follows:[133X
  
  [30X    [33X[0;6YThe  [13Xvertices[113X  are  the  vertices  (colour 0), edges (colour 1), faces
        (colour  2)  and  colours  (colour  4)  of  [3XcolComplex[103X. The labels are
        shifted in the following way:[133X
  
        [30X    [33X[0;12YThe vertex numbers are not modified[133X
  
        [30X    [33X[0;12YThe  edge  numbers  are  shifted  upwards  by the maximal vertex
              number[133X
  
        [30X    [33X[0;12YThe  face  numbers are shifted upwards by the sum of the maximal
              vertex number and the maximal edge number[133X
  
        [30X    [33X[0;12YThe  colour labels are shifted upwards by the sum of the maximal
              vertex label, the maximal edge label and the maximal face label.[133X
  
  [30X    [33X[0;6YThe [13Xedges[113X can be one of these:[133X
  
        [30X    [33X[0;12YVertex-edge-pairs  or  edge-face-pairs such that the elements of
              the pair are incident in the polygonal complex of [3XcolComplex[103X[133X
  
        [30X    [33X[0;12Yedge-colour-pairs  such  that  the  edge  has  the corresponding
              colour in [3XcolComplex[103X.[133X
  
  [33X[0;0YThe returned graph can be given in three different formats, corresponding to
  different graph packages: [9XDigraphs[109X, [9XGRAPE[109X and [9XNautyTracesInterface[109X.[133X
  
  [33X[0;0YAs  an  example consider the coloured Tetrahedron: Image omitted in terminal
  text[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XcolTetra := EdgeColouredPolygonalComplex(Tetrahedron(), [1,2,3,3,2,1]);;[127X[104X
  [4X[32X[104X
  
  [33X[0;0YFor  example  edge  1  is  incident to the vertices 1 and 2, incident to the
  faces  1  and  2  and  has colour 1. Edge 1 has the label 5 in the incidence
  graph.  This means that edge 5 must be adjacent to the vertices 1, 2, 11, 12
  and 15 in the incidence graph:[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xdigraph:=ColourIncidenceDigraphsGraph(colTetra);;[127X[104X
    [4X[25Xgap>[125X [27XInNeighboursOfVertex(digraph,5);[127X[104X
    [4X[28X[ 1, 2, 11, 12, 15 ][128X[104X
  [4X[32X[104X
  
  [1X18.3-2 IsIsomorphicEdgeColouredPolygonalComplex[101X
  
  [33X[1;0Y[29X[2XIsIsomorphicEdgeColouredPolygonalComplex[102X( [3XcolComplex1[103X, [3XcolComplex2[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Y[9Xtrue[109X or [9Xfalse[109X[133X
  
  [33X[0;0YReturn  whether  the given edge coloured polygonal complexes are isomorphic.
  They  are  isomorphic  if  their  colour-extended  incidence graphs (compare
  [14X18.3-1[114X) are isomorphic. Changes of the colour labels are explicitly allowed.[133X
  
  [33X[0;0YFor example the two colourings from [14X18.1-2[114X are not isomorphic.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XIsIsomorphicEdgeColouredPolygonalComplex(colPyr1, colPyr2);[127X[104X
    [4X[28Xfalse[128X[104X
  [4X[32X[104X
  
  [1X18.3-3 EdgeColouredPolygonalComplexIsomorphismRepresentatives[101X
  
  [33X[1;0Y[29X[2XEdgeColouredPolygonalComplexIsomorphismRepresentatives[102X( [3XcomplexList[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya list of edge coloured polygonal complexes[133X
  
  [33X[0;0YThe  method  [9XEdgeColouredPolygonalComplexIsomorphismRepresentatives[109X  takes a
  list  of  edge  coloured  polygonal  complexes and returns a reduced list in
  which no two entries are isomorphic.[133X
  
  [33X[0;0YFor example, consider two isomorphic edge-coloured tetrahedra:[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XcolTetra1 := EdgeColouredPolygonalComplex(Tetrahedron(), [1,2,3,3,2,1]);[127X[104X
    [4X[28Xtame coloured surface (RRR with 4 vertices, 6 edges and 4 faces)[128X[104X
    [4X[25Xgap>[125X [27XcolTetra2 := EdgeColouredPolygonalComplex(Tetrahedron(), [3,1,2,2,1,3]);[127X[104X
    [4X[28Xtame coloured surface (RRR with 4 vertices, 6 edges and 4 faces)[128X[104X
    [4X[25Xgap>[125X [27XIsIsomorphicEdgeColouredPolygonalComplex(colTetra1,colTetra2);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XLength([127X[104X
    [4X[25X>[125X [27XEdgeColouredPolygonalComplexIsomorphismRepresentatives([colTetra1,colTetra2]));[127X[104X
    [4X[28X1[128X[104X
  [4X[32X[104X
  
