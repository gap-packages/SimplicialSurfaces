  
  [1X4 [33X[0;0YConstructing surfaces by their incidence structure[133X[101X
  
  [33X[0;0YIn  chapter  [14X2[114X  we  introduced  polygonal  complexes (as a generalization of
  simplicial  surfaces).  They  are  based on incidence structures, which were
  analysed in chapter [14X3[114X.[133X
  
  [33X[0;0YThis  chapter  deals with the construction of custom polygonal complexes and
  simplicial surfaces. This package offers three different ways to construct a
  polygonal complex "from scratch":[133X
  
  [30X    [33X[0;6YChoose  from  a  few  standard example (like platonic solids). This is
        covered in the later sections of chapter [14X14[114X.[133X
  
  [30X    [33X[0;6YDefine  it  directly by its incidence structure (this will be the main
        content of this chapter).[133X
  
  [30X    [33X[0;6YUse  the  surface database to find appropriate complexes. This will be
        handled in the first section of chapter [14X14[114X.[133X
  
  [33X[0;0YFor  simplicial  surfaces  another  and  more  convenient constructor is the
  constructor[133X
  
  [30X    [33X[0;6Y[9XSimplicialSurfaceByUmbrellaDescriptor[109X( [3XedgeFacePaths[103X ).[133X
  
  [33X[0;0YAll  other  constructures  which  work  for  general polygonal complexes are
  structured like [Type]By[Method](args), e.g.[133X
  
  [30X    [33X[0;6Y[9XPolygonalComplexByDownwardIncidence[109X( [3XverticesOfEdges[103X, [3XedgesOfFaces[103X )[133X
  
  [33X[0;0YThey  are  mainly  distinguished  by  the  different attributes they need to
  construct the incidence structures:[133X
  
  [30X    [33X[0;6Y[13XDownwardIncidence[113X ([14X4.1[114X): [9XVerticesOfEdges[109X ([14X3.2-3[114X), [9XEdgesOfFaces[109X ([14X3.2-6[114X)[133X
  
  [30X    [33X[0;6Y[13XUpwardIncidence[113X ([14X4.2[114X): [9XEdgesOfVertices[109X ([14X3.2-1[114X), [9XFacesOfEdges[109X ([14X3.2-4[114X)[133X
  
  [30X    [33X[0;6Y[13XVerticesInFaces[113X ([14X4.3[114X): [9XVerticesOfFaces[109X ([14X3.2-5[114X)[133X
  
  
  [1X4.1 [33X[0;0YDownwardIncidence[133X[101X
  
  [33X[0;0YThe    [13XDownwardIncidence[113X-constructors    are   based   on   the   attributes
  [9XVerticesOfEdges[109X  ([14X3.2-3[114X)  and [9XEdgesOfFaces[109X ([14X3.2-6[114X). From these any polygonal
  structure from chapter [14X2[114X can be build.[133X
  
  [33X[0;0YTo use the constructor, we need to describe two incidence relations:[133X
  
  [30X    [33X[0;6Yincidence between vertices and edges (the argument [3XverticesOfEdges[103X)[133X
  
  [30X    [33X[0;6Yincidence between edges and faces (the argument [3XedgesOfFaces[103X)[133X
  
  [33X[0;0YAs  an  example,  consider the following polygonal surface: Image omitted in
  terminal text[133X
  
  [33X[0;0YBoth of the incidence relations described above are given as lists. The list
  [3XverticesOfEdges[103X  contains  an  entry for each edge of the polygonal surface.
  This entry contains the set of all vertices that are incident to that edge.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XverticesOfEdges := [127X[104X
    [4X[25X>[125X [27X         [,[3,5],,,,[3,7],,[3,11],,[7,11],,[5,13],,[7,13],[11,13]];[127X[104X
    [4X[28X[ , [ 3, 5 ],,,, [ 3, 7 ],, [ 3, 11 ],, [ 7, 11 ],, [ 5, 13 ],, [128X[104X
    [4X[28X  [ 7, 13 ], [ 11, 13 ] ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YSimilarly  the  list [3XedgesOfFaces[103X has an entry for each face with the set of
  incident edges.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XedgesOfFaces := [ [2,6,12,14], , , [6,8,10], , , , , [10,14,15] ];[127X[104X
    [4X[28X[ [ 2, 6, 12, 14 ],,, [ 6, 8, 10 ],,,,, [ 10, 14, 15 ] ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YWith these two lists we can construct the desired polygonal surface.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XPolygonalSurfaceByDownwardIncidence( verticesOfEdges, edgesOfFaces );;[127X[104X
  [4X[32X[104X
  
  [33X[0;0YThe   [13XDownwardIncidence[113X-constructors   also  allow  the  optional  arguments
  [3Xvertices[103X,   [3Xedges[103X  and  [3Xfaces[103X.  If  those  sets  are  given,  the  incidence
  information is checked for compatibility with them, that is (1) the integers
  in [3Xfaces[103X correspond to the bound positions of [3XedgesOfFaces[103X, (2) the integers
  in  [3Xedges[103X  are  those  occurring  in  the  entries  of [3XedgesOfFaces[103X and also
  correspond  to  the bound entries of [3XverticesOfEdges[103X and (3) the integers in
  [3Xverties[103X  are  those occurring in the entries of [3XverticesOfEdges[103X. This is not
  strictly  necessary  since  this  information  can be deduced from the lists
  [3XverticesOfEdges[103X and [3XedgesOfFaces[103X.[133X
  
  [33X[0;0YIn  practice  it  is common to make mistakes in manually giving these lists.
  Especially  in  such  situations  it  is  recommended  to  use  the optional
  arguments as they might catch some mistakes.[133X
  
  [33X[0;0YTo  make  giving these lists easier, each of these sets can be replaces by a
  positive integer [3Xn[103X, which will be interpreted as the set [22X[1,...,n][122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XPolygonalSurfaceByDownwardIncidence( [3,5,7,11,13], [2,6,8,10,12,14,15], [127X[104X
    [4X[25X>[125X [27X    [1,4,9], verticesOfEdges, edgesOfFaces );;[127X[104X
  [4X[32X[104X
  
  [33X[0;0YThe  name  [13XDownwardIncidence[113X stems from the fact that the incidence relation
  is  given by referring to structures of lower dimension - an edge (dimension
  1)  is  defined  by  two  vertices (dimension 0) and a face (dimension 2) is
  defined by edges.[133X
  
  [1X4.1-1 PolygonalComplexByDownwardIncidence[101X
  
  [33X[1;0Y[29X[2XPolygonalComplexByDownwardIncidence[102X( [3XverticesOfEdges[103X, [3XedgesOfFaces[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XPolygonalComplexByDownwardIncidence[102X( [3Xvertices[103X, [3Xedges[103X, [3Xfaces[103X, [3XverticesOfEdges[103X, [3XedgesOfFaces[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XPolygonalComplexByDownwardIncidenceNC[102X( [3XverticesOfEdges[103X, [3XedgesOfFaces[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XPolygonalComplexByDownwardIncidenceNC[102X( [3Xvertices[103X, [3Xedges[103X, [3Xfaces[103X, [3XverticesOfEdges[103X, [3XedgesOfFaces[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya polygonal complex[133X
  
  [33X[0;0YThis  method  constructs a polygonal complex ([14X2.1[114X) where vertices, edges and
  faces  are  represented  by positive integers. It is based on the attributes
  [9XVerticesOfEdges[109X ([14X3.2-3[114X) and [9XEdgesOfFaces[109X ([14X3.2-6[114X) and takes these arguments:[133X
  
  [31X1[131X   [33X[0;6YOPTIONAL:  Each of the optional arguments [3Xvertices[103X, [3Xedges[103X and [3Xfaces[103X is
        either a set of positive integers or a positive integer. In the latter
        case, an integer [22Xn[122X represents the set [22X[1,...,n][122X.[133X
  
        [33X[0;6YAlthough   these  arguments  can  be  deduced  from  the  non-optional
        arguments,  their  use is recommended to catch mistakes in these other
        arguments.[133X
  
  [31X2[131X   [33X[0;6Y[9XverticesOfEdges[109X:  A  list  that has an entry for each edge (a positive
        integer). This entry has to be a list of the two vertices (as positive
        integers) of this edge.[133X
  
  [31X3[131X   [33X[0;6Y[9XedgesOfFaces[109X:  A  list  that  has  an  entry for each face (a positive
        integer).  This  entry  has  to  be  a  list of the edges (as positive
        integers) of this face.[133X
  
  [33X[0;0YThe  method  checks whether the answer to each of the following questions is
  true. None of these checks will be performed by the NC-version.[133X
  
  [30X    [33X[0;6YAre  the  optional arguments [3Xvertices[103X, [3Xedges[103X and [3Xfaces[103X either positive
        integers or sets of positive integers?[133X
  
  [30X    [33X[0;6YAre [3XverticesOfEdges[103X and [3XedgesOfFaces[103X lists where the entries are lists
        of positive integers?[133X
  
  [30X    [33X[0;6YIs  every  bound  entry  of  [3XverticesOfEdges[103X  a  list with exactly two
        entries that are different?[133X
  
  [30X    [33X[0;6YDoes every bound entry of [3XedgesOfFaces[103X contain at least two elements?[133X
  
  [30X    [33X[0;6YIf [3Xvertices[103X is given, is [9XUnion[109X([3XverticesOfEdges[103X) = [3Xvertices[103X?[133X
  
  [30X    [33X[0;6YAre    the    bound    positions    of    [3XverticesOfEdges[103X   equal   to
        [9XUnion[109X([3XedgesOfFaces[103X)? If [3Xedges[103X is given, is it equal to those two sets?[133X
  
  [30X    [33X[0;6YIf [3Xfaces[103X is given, is it equal to the bound positions of [3XedgesOfFaces[103X?[133X
  
  [33X[0;0YAs an example consider the following net of a polygonal complex (note, there
  are both vertex and edge ramifications): Image omitted in terminal text[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xcomplex := PolygonalComplexByDownwardIncidence([127X[104X
    [4X[25X>[125X [27X       [[1,2],[2,3],[1,3],[3,6],[1,6],[6,5],[2,5],[1,5]],[127X[104X
    [4X[25X>[125X [27X       [[1,7,8],[1,7,8],[2,4,6,7],[2,4,6,7],[3,4,5],[3,4,5]]);;[127X[104X
    [4X[25Xgap>[125X [27XRamifiedVertices(complex);[127X[104X
    [4X[28X[ 1 ][128X[104X
    [4X[25Xgap>[125X [27XChaoticVertices(complex);[127X[104X
    [4X[28X[ 2, 3, 5, 6 ][128X[104X
  [4X[32X[104X
  
  [1X4.1-2 PolygonalSurfaceByDownwardIncidence[101X
  
  [33X[1;0Y[29X[2XPolygonalSurfaceByDownwardIncidence[102X( [3XverticesOfEdges[103X, [3XedgesOfFaces[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XPolygonalSurfaceByDownwardIncidence[102X( [3Xvertices[103X, [3Xedges[103X, [3Xfaces[103X, [3XverticesOfEdges[103X, [3XedgesOfFaces[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XPolygonalSurfaceByDownwardIncidenceNC[102X( [3XverticesOfEdges[103X, [3XedgesOfFaces[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XPolygonalSurfaceByDownwardIncidenceNC[102X( [3Xvertices[103X, [3Xedges[103X, [3Xfaces[103X, [3XverticesOfEdges[103X, [3XedgesOfFaces[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya polygonal surface[133X
  
  [33X[0;0YThis  method  constructs a polygonal surface ([14X2.3[114X) where vertices, edges and
  faces  are  represented  by positive integers. It is based on the attributes
  [9XVerticesOfEdges[109X ([14X3.2-3[114X) and [9XEdgesOfFaces[109X ([14X3.2-6[114X) and takes these arguments:[133X
  
  [31X1[131X   [33X[0;6YOPTIONAL:  Each of the optional arguments [3Xvertices[103X, [3Xedges[103X and [3Xfaces[103X is
        either a set of positive integers or a positive integer. In the latter
        case, an integer [22Xn[122X represents the set [22X[1,...,n][122X.[133X
  
        [33X[0;6YAlthough   these  arguments  can  be  deduced  from  the  non-optional
        arguments,  their  use is recommended to catch mistakes in these other
        arguments.[133X
  
  [31X2[131X   [33X[0;6Y[9XverticesOfEdges[109X:  A  list  that has an entry for each edge (a positive
        integer). This entry has to be a list of the two vertices (as positive
        integers) of this edge.[133X
  
  [31X3[131X   [33X[0;6Y[9XedgesOfFaces[109X:  A  list  that  has  an  entry for each face (a positive
        integer).  This  entry  has  to  be  a  list of the edges (as positive
        integers) of this face.[133X
  
  [33X[0;0YThe  method  checks whether the answer to each of the following questions is
  true. None of these checks will be performed by the NC-version.[133X
  
  [30X    [33X[0;6YAre  the  optional arguments [3Xvertices[103X, [3Xedges[103X and [3Xfaces[103X either positive
        integers or sets of positive integers?[133X
  
  [30X    [33X[0;6YAre [3XverticesOfEdges[103X and [3XedgesOfFaces[103X lists where the entries are lists
        of positive integers?[133X
  
  [30X    [33X[0;6YIs  every  bound  entry  of  [3XverticesOfEdges[103X  a  list with exactly two
        entries that are different?[133X
  
  [30X    [33X[0;6YDoes every bound entry of [3XedgesOfFaces[103X contain at least two elements?[133X
  
  [30X    [33X[0;6YIf [3Xvertices[103X is given, is [9XUnion[109X([3XverticesOfEdges[103X) = [3Xvertices[103X?[133X
  
  [30X    [33X[0;6YAre    the    bound    positions    of    [3XverticesOfEdges[103X   equal   to
        [9XUnion[109X([3XedgesOfFaces[103X)? If [3Xedges[103X is given, is it equal to those two sets?[133X
  
  [30X    [33X[0;6YIf [3Xfaces[103X is given, is it equal to the bound positions of [3XedgesOfFaces[103X?[133X
  
  [33X[0;0YAs  an  example  consider  the  following net of a simplicial surface: Image
  omitted in terminal text[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xsurf := PolygonalSurfaceByDownwardIncidence([127X[104X
    [4X[25X>[125X [27X     [[1,2],[2,3],[3,4],[4,5],[5,1],[127X[104X
    [4X[25X>[125X [27X      [1,6],[2,7],[2,8],[3,9],[3,10],[4,11],[4,12],[5,13],[5,14],[1,15],[127X[104X
    [4X[25X>[125X [27X      [6,15],[6,7],[7,8],[8,9],[9,10],[10,11],[11,12],[12,13],[13,14],[14,15]],[127X[104X
    [4X[25X>[125X [27X     [[6,15,16],[1,6,7,17],[7,8,18],[2,8,9,19],[9,10,20],[3,10,11,21],[127X[104X
    [4X[25X>[125X [27X      [11,12,22],[4,12,13,23],[13,14,24],[5,14,15,25]]);;[127X[104X
    [4X[25Xgap>[125X [27XIsClosedSurface(surf);[127X[104X
    [4X[28Xfalse[128X[104X
    [4X[25Xgap>[125X [27XPerimeterOfHoles(surf);[127X[104X
    [4X[28X[ (v1, E1, v2, E2, v3, E3, v4, E4, v5, E5, v1), [128X[104X
    [4X[28X  (v6, E16, v15, E25, v14, E24, v13, E23, v12, E22, v11, E21, [128X[104X
    [4X[28X            v10, E20, v9, E19, v8, E18, v7, E17, v6) ][128X[104X
  [4X[32X[104X
  
  [1X4.1-3 TriangularComplexByDownwardIncidence[101X
  
  [33X[1;0Y[29X[2XTriangularComplexByDownwardIncidence[102X( [3XverticesOfEdges[103X, [3XedgesOfFaces[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XTriangularComplexByDownwardIncidence[102X( [3Xvertices[103X, [3Xedges[103X, [3Xfaces[103X, [3XverticesOfEdges[103X, [3XedgesOfFaces[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XTriangularComplexByDownwardIncidenceNC[102X( [3XverticesOfEdges[103X, [3XedgesOfFaces[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XTriangularComplexByDownwardIncidenceNC[102X( [3Xvertices[103X, [3Xedges[103X, [3Xfaces[103X, [3XverticesOfEdges[103X, [3XedgesOfFaces[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya triangular complex[133X
  
  [33X[0;0YThis  method constructs a triangular complex ([14X2.1[114X) where vertices, edges and
  faces  are  represented  by positive integers. It is based on the attributes
  [9XVerticesOfEdges[109X ([14X3.2-3[114X) and [9XEdgesOfFaces[109X ([14X3.2-6[114X) and takes these arguments:[133X
  
  [31X1[131X   [33X[0;6YOPTIONAL:  Each of the optional arguments [3Xvertices[103X, [3Xedges[103X and [3Xfaces[103X is
        either a set of positive integers or a positive integer. In the latter
        case, an integer [22Xn[122X represents the set [22X[1,...,n][122X.[133X
  
        [33X[0;6YAlthough   these  arguments  can  be  deduced  from  the  non-optional
        arguments,  their  use is recommended to catch mistakes in these other
        arguments.[133X
  
  [31X2[131X   [33X[0;6Y[9XverticesOfEdges[109X:  A  list  that has an entry for each edge (a positive
        integer). This entry has to be a list of the two vertices (as positive
        integers) of this edge.[133X
  
  [31X3[131X   [33X[0;6Y[9XedgesOfFaces[109X:  A  list  that  has  an  entry for each face (a positive
        integer).  This  entry  has  to  be  a  list of the edges (as positive
        integers) of this face.[133X
  
  [33X[0;0YThe  method  checks whether the answer to each of the following questions is
  true. None of these checks will be performed by the NC-version.[133X
  
  [30X    [33X[0;6YAre  the  optional arguments [3Xvertices[103X, [3Xedges[103X and [3Xfaces[103X either positive
        integers or sets of positive integers?[133X
  
  [30X    [33X[0;6YAre [3XverticesOfEdges[103X and [3XedgesOfFaces[103X lists where the entries are lists
        of positive integers?[133X
  
  [30X    [33X[0;6YIs  every  bound  entry  of  [3XverticesOfEdges[103X  a  list with exactly two
        entries that are different?[133X
  
  [30X    [33X[0;6YDoes every bound entry of [3XedgesOfFaces[103X contain at least two elements?[133X
  
  [30X    [33X[0;6YIf [3Xvertices[103X is given, is [9XUnion[109X([3XverticesOfEdges[103X) = [3Xvertices[103X?[133X
  
  [30X    [33X[0;6YAre    the    bound    positions    of    [3XverticesOfEdges[103X   equal   to
        [9XUnion[109X([3XedgesOfFaces[103X)? If [3Xedges[103X is given, is it equal to those two sets?[133X
  
  [30X    [33X[0;6YIf [3Xfaces[103X is given, is it equal to the bound positions of [3XedgesOfFaces[103X?[133X
  
  [33X[0;0YAs  an  example  consider  the following net of a triangular complex (at the
  vertices  and  edges  marked red, there are ramifications): Image omitted in
  terminal text[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xcomplex := TriangularComplexByDownwardIncidence([127X[104X
    [4X[25X>[125X [27X       [[1,7],[2,7],[3,7],[4,7],[5,7],[6,7],[127X[104X
    [4X[25X>[125X [27X        [1,9],[8,9],[3,9],[4,9],[9,10],[6,9],[127X[104X
    [4X[25X>[125X [27X        [1,12],[11,12],[3,12],[4,12],[12,13],[6,12],[127X[104X
    [4X[25X>[125X [27X        [1,2],[2,3],[3,4],[4,5],[5,6],,[1,8],[3,8],[127X[104X
    [4X[25X>[125X [27X        [4,10],[6,10],[1,11],[3,11],[4,13],[6,13]],[127X[104X
    [4X[25X>[125X [27X       [[1,2,19],[2,3,20],[3,4,21],[4,5,22],[5,6,23],[127X[104X
    [4X[25X>[125X [27X        [7,8,25],[8,9,26],[9,10,21],[10,11,27],[11,12,28],[127X[104X
    [4X[25X>[125X [27X        [13,14,29],[14,15,30],[15,16,21],[16,17,31],[17,18,32]]);;[127X[104X
    [4X[25Xgap>[125X [27XUmbrellaPathPartitionOfVertex(complex, 1);[127X[104X
    [4X[28X[ | e1, F1, e19 |, | e7, F6, e25 |, | e13, F11, e29 | ][128X[104X
    [4X[25Xgap>[125X [27XUmbrellaPathPartitionOfVertex(complex, 6);[127X[104X
    [4X[28X[ | e6, F5, e23 |, | e12, F10, e28 |, | e18, F15, e32 | ][128X[104X
    [4X[25Xgap>[125X [27XFacesOfEdge(complex, 21);[127X[104X
    [4X[28X[ 3, 8, 13 ][128X[104X
  [4X[32X[104X
  
  [1X4.1-4 SimplicialSurfaceByDownwardIncidence[101X
  
  [33X[1;0Y[29X[2XSimplicialSurfaceByDownwardIncidence[102X( [3XverticesOfEdges[103X, [3XedgesOfFaces[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XSimplicialSurfaceByDownwardIncidence[102X( [3Xvertices[103X, [3Xedges[103X, [3Xfaces[103X, [3XverticesOfEdges[103X, [3XedgesOfFaces[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XSimplicialSurfaceByDownwardIncidenceNC[102X( [3XverticesOfEdges[103X, [3XedgesOfFaces[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XSimplicialSurfaceByDownwardIncidenceNC[102X( [3Xvertices[103X, [3Xedges[103X, [3Xfaces[103X, [3XverticesOfEdges[103X, [3XedgesOfFaces[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya simplicial surface[133X
  
  [33X[0;0YThis  method constructs a simplicial surface ([14X2.3[114X) where vertices, edges and
  faces  are  represented  by positive integers. It is based on the attributes
  [9XVerticesOfEdges[109X ([14X3.2-3[114X) and [9XEdgesOfFaces[109X ([14X3.2-6[114X) and takes these arguments:[133X
  
  [31X1[131X   [33X[0;6YOPTIONAL:  Each of the optional arguments [3Xvertices[103X, [3Xedges[103X and [3Xfaces[103X is
        either a set of positive integers or a positive integer. In the latter
        case, an integer [22Xn[122X represents the set [22X[1,...,n][122X.[133X
  
        [33X[0;6YAlthough   these  arguments  can  be  deduced  from  the  non-optional
        arguments,  their  use is recommended to catch mistakes in these other
        arguments.[133X
  
  [31X2[131X   [33X[0;6Y[9XverticesOfEdges[109X:  A  list  that has an entry for each edge (a positive
        integer). This entry has to be a list of the two vertices (as positive
        integers) of this edge.[133X
  
  [31X3[131X   [33X[0;6Y[9XedgesOfFaces[109X:  A  list  that  has  an  entry for each face (a positive
        integer).  This  entry  has  to  be  a  list of the edges (as positive
        integers) of this face.[133X
  
  [33X[0;0YThe  method  checks whether the answer to each of the following questions is
  true. None of these checks will be performed by the NC-version.[133X
  
  [30X    [33X[0;6YAre  the  optional arguments [3Xvertices[103X, [3Xedges[103X and [3Xfaces[103X either positive
        integers or sets of positive integers?[133X
  
  [30X    [33X[0;6YAre [3XverticesOfEdges[103X and [3XedgesOfFaces[103X lists where the entries are lists
        of positive integers?[133X
  
  [30X    [33X[0;6YIs  every  bound  entry  of  [3XverticesOfEdges[103X  a  list with exactly two
        entries that are different?[133X
  
  [30X    [33X[0;6YDoes every bound entry of [3XedgesOfFaces[103X contain at least two elements?[133X
  
  [30X    [33X[0;6YIf [3Xvertices[103X is given, is [9XUnion[109X([3XverticesOfEdges[103X) = [3Xvertices[103X?[133X
  
  [30X    [33X[0;6YAre    the    bound    positions    of    [3XverticesOfEdges[103X   equal   to
        [9XUnion[109X([3XedgesOfFaces[103X)? If [3Xedges[103X is given, is it equal to those two sets?[133X
  
  [30X    [33X[0;6YIf [3Xfaces[103X is given, is it equal to the bound positions of [3XedgesOfFaces[103X?[133X
  
  [33X[0;0YAs  an  example  consider  the  following net of a simplicial surface: Image
  omitted in terminal text[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xsurf := SimplicialSurfaceByDownwardIncidence([127X[104X
    [4X[25X>[125X [27X     [[1,5],[2,5],[5,6],[5,9],[4,5],,[1,4],[1,2],[2,6],,[127X[104X
    [4X[25X>[125X [27X      [1,7],[2,7],[6,7],[7,10],[4,7],,[6,9],[4,9],[6,10],[4,10],,[9,10]],[127X[104X
    [4X[25X>[125X [27X     [[1,5,7],[1,2,8],[2,3,9],[3,4,17],[4,5,18],,,,[17,19,22],[127X[104X
    [4X[25X>[125X [27X      [18,20,22],[7,11,15],[8,11,12],[9,12,13],[13,14,19],[14,15,20]]);;[127X[104X
    [4X[25Xgap>[125X [27XVertices(surf);[127X[104X
    [4X[28X[ 1, 2, 4, 5, 6, 7, 9, 10 ][128X[104X
    [4X[25Xgap>[125X [27XEdges(surf);[127X[104X
    [4X[28X[ 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22 ][128X[104X
    [4X[25Xgap>[125X [27XFaces(surf);[127X[104X
    [4X[28X[ 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15 ][128X[104X
    [4X[25Xgap>[125X [27XEulerCharacteristic(surf);[127X[104X
    [4X[28X2[128X[104X
    [4X[25Xgap>[125X [27XIsClosedSurface(surf);[127X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  
  [1X4.2 [33X[0;0YUpwardIncidence[133X[101X
  
  [33X[0;0YThe [13XUpwardIncidence[113X-constructors are based on the attributes [9XEdgesOfVertices[109X
  ([14X3.2-1[114X)  and  [9XFacesOfEdges[109X  ([14X3.2-4[114X). From these any polygonal structure from
  chapter [14X2[114X can be build.[133X
  
  [33X[0;0YTo use the constructor, we need to describe two incidence relations:[133X
  
  [30X    [33X[0;6Yincidence between edges and vertices (the argument [3XedgesOfVertices[103X)[133X
  
  [30X    [33X[0;6Yincidence between faces and edges (the argument [3XfacesOfEdges[103X)[133X
  
  [33X[0;0YAs  an  example,  consider the following polygonal surface: Image omitted in
  terminal text[133X
  
  [33X[0;0YBoth of the incidence relations described above are given as lists. The list
  [3XedgesOfVertices[103X  contains an entry for each vertex of the polygonal surface.
  This entry contains the set of all edges that are incident to that vertex.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XedgesOfVertices := [127X[104X
    [4X[25X>[125X [27X        [,, [2,6,8],, [2,12],, [6,10,14],,,, [8,10,15],, [12,14,15] ];[127X[104X
    [4X[28X[ ,,  [ 2, 6, 8 ],, [ 2, 12 ],, [ 6, 10, 14 ],,,, [ 8, 10, 15 ],, [128X[104X
    [4X[28X    [ 12, 14, 15 ] ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YSimilarly  the  list [3XfacesOfEdges[103X has an entry for each edge with the set of
  incident faces.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XfacesOfEdges := [ , [1], , , , [1,4], , [4], , [4,9], , [1], , [1,9], [9] ];[127X[104X
    [4X[28X[ , [ 1 ],,,, [ 1, 4 ],, [ 4 ],, [ 4, 9 ],, [ 1 ],, [ 1, 9 ], [ 9 ] ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YWith these two lists we can construct the desired polygonal surface.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XPolygonalSurfaceByUpwardIncidence( edgesOfVertices, facesOfEdges );;[127X[104X
  [4X[32X[104X
  
  [33X[0;0YThe [13XUpwardIncidence[113X-constructors also allow the optional arguments [3Xvertices[103X,
  [3Xedges[103X  and  [3Xfaces[103X.  If  those  sets  are given, the incidence information is
  checked  for  compatibility  with them. This is not strictly necessary since
  this   information  can  be  deduced  from  the  lists  [3XedgesOfVertices[103X  and
  [3XfacesOfEdges[103X.[133X
  
  [33X[0;0YIn  practice  it  is common to make mistakes in manually giving these lists.
  Especially  in  such  situations  it  is  recommended  to  use  the optional
  arguments as they might catch some mistakes.[133X
  
  [33X[0;0YTo  make  giving these lists easier, each of these sets can be replaces by a
  positive integer [3Xn[103X, which will be interpreted as the set [22X[1,...,n][122X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XPolygonalSurfaceByUpwardIncidence( [3,5,7,11,13], [2,6,8,10,12,14,15], [127X[104X
    [4X[25X>[125X [27X    [1,4,9], edgesOfVertices, facesOfEdges );;[127X[104X
  [4X[32X[104X
  
  [33X[0;0YThe  name [13XUpwardIncidence[113X stems from the fact that the incidence relation is
  given  by  referring to structures of higher dimension - a vertex (dimension
  0)  is  defined  by  its edges (dimension 1) and an edge is defined by faces
  (dimension 2).[133X
  
  [1X4.2-1 PolygonalComplexByUpwardIncidence[101X
  
  [33X[1;0Y[29X[2XPolygonalComplexByUpwardIncidence[102X( [3XedgesOfVertices[103X, [3XfacesOfEdges[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XPolygonalComplexByUpwardIncidence[102X( [3Xvertices[103X, [3Xedges[103X, [3Xfaces[103X, [3XedgesOfVertices[103X, [3XfacesOfEdges[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XPolygonalComplexByUpwardIncidenceNC[102X( [3XedgesOfVertices[103X, [3XfacesOfEdges[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XPolygonalComplexByUpwardIncidenceNC[102X( [3Xvertices[103X, [3Xedges[103X, [3Xfaces[103X, [3XedgesOfVertices[103X, [3XfacesOfEdges[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya polygonal complex[133X
  
  [33X[0;0YThis  method  constructs a polygonal complex ([14X2.1[114X) where vertices, edges and
  faces  are  represented  by positive integers. It is based on the attributes
  [9XEdgesOfVertices[109X ([14X3.2-1[114X) and [9XFacesOfEdges[109X ([14X3.2-4[114X) and takes these arguments:[133X
  
  [31X1[131X   [33X[0;6YOPTIONAL:  Each of the optional arguments [3Xvertices[103X, [3Xedges[103X and [3Xfaces[103X is
        either a set of positive integers or a positive integer. In the latter
        case, an integer [22Xn[122X represents the set [22X[1,...,n][122X.[133X
  
        [33X[0;6YAlthough   these  arguments  can  be  deduced  from  the  non-optional
        arguments,  their  use is recommended to catch mistakes in these other
        arguments.[133X
  
  [31X2[131X   [33X[0;6Y[9XedgesOfVertices[109X:  A list that has an entry for each vertex (a positive
        integer).  This  entry  has  to  be  a  list of the incident edges (as
        positive integers) of this vertex.[133X
  
  [31X3[131X   [33X[0;6Y[9XfacesOfEdges[109X:  A  list  that  has  an  entry for each edge (a positive
        integer).  This  entry  has  to  be  a  list of the incident faces (as
        positive integers) of this edge.[133X
  
  [33X[0;0YThe  method  checks whether the answer to each of the following questions is
  true. None of these checks will be performed by the NC-version.[133X
  
  [30X    [33X[0;6YAre  the  optional arguments [3Xvertices[103X, [3Xedges[103X and [3Xfaces[103X either positive
        integers or sets of positive integers?[133X
  
  [30X    [33X[0;6YAre [3XedgesOfVertices[103X and [3XfacesOfEdges[103X lists where the entries are lists
        of positive integers?[133X
  
  [30X    [33X[0;6YDoes  every  edge  of  the resulting polygonal complex has exactly two
        incident vertices?[133X
  
  [30X    [33X[0;6YDoes  every  face  of the resulting polygonal complex has at least two
        incident edges?[133X
  
  [30X    [33X[0;6YDoes every bound entry of [3XedgesOfFaces[103X contain at least two elements?[133X
  
  [30X    [33X[0;6YIf  [3Xvertices[103X  is  given,  is  it  equal  to  the  bound  positions  of
        [3XedgesOfVertices[103X?[133X
  
  [30X    [33X[0;6YAre     the    bound    positions    of    [3XfacesOfEdges[103X    equal    to
        [9XUnion[109X([3XedgesOfVertices[103X)?  If  [3Xedges[103X  is given, is it equal to those two
        sets?[133X
  
  [30X    [33X[0;6YIf [3Xfaces[103X is given, is it equal to [9XUnion[109X([3XfacesOfEdges[103X)?[133X
  
  [33X[0;0YAs an example consider the following net of a polygonal complex (note, there
  are both vertex and edge ramifications): Image omitted in terminal text[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xcomplex := PolygonalComplexByUpwardIncidence([127X[104X
    [4X[25X>[125X [27X       [[1,8,3,5],[1,2,7],[2,3,4],,[6,7,8],[4,5,6]],[127X[104X
    [4X[25X>[125X [27X       [[1,2],[3,4],[5,6],[3,4,5,6],[5,6],[3,4],[1,2,3,4],[1,2]]);;[127X[104X
    [4X[25Xgap>[125X [27XRamifiedVertices(complex);[127X[104X
    [4X[28X[ 1 ][128X[104X
    [4X[25Xgap>[125X [27XChaoticVertices(complex);[127X[104X
    [4X[28X[ 2, 3, 5, 6 ][128X[104X
  [4X[32X[104X
  
  [1X4.2-2 PolygonalSurfaceByUpwardIncidence[101X
  
  [33X[1;0Y[29X[2XPolygonalSurfaceByUpwardIncidence[102X( [3XedgesOfVertices[103X, [3XfacesOfEdges[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XPolygonalSurfaceByUpwardIncidence[102X( [3Xvertices[103X, [3Xedges[103X, [3Xfaces[103X, [3XedgesOfVertices[103X, [3XfacesOfEdges[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XPolygonalSurfaceByUpwardIncidenceNC[102X( [3XedgesOfVertices[103X, [3XfacesOfEdges[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XPolygonalSurfaceByUpwardIncidenceNC[102X( [3Xvertices[103X, [3Xedges[103X, [3Xfaces[103X, [3XedgesOfVertices[103X, [3XfacesOfEdges[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya polygonal surface[133X
  
  [33X[0;0YThis  method  constructs a polygonal surface ([14X2.3[114X) where vertices, edges and
  faces  are  represented  by positive integers. It is based on the attributes
  [9XEdgesOfVertices[109X ([14X3.2-1[114X) and [9XFacesOfEdges[109X ([14X3.2-4[114X) and takes these arguments:[133X
  
  [31X1[131X   [33X[0;6YOPTIONAL:  Each of the optional arguments [3Xvertices[103X, [3Xedges[103X and [3Xfaces[103X is
        either a set of positive integers or a positive integer. In the latter
        case, an integer [22Xn[122X represents the set [22X[1,...,n][122X.[133X
  
        [33X[0;6YAlthough   these  arguments  can  be  deduced  from  the  non-optional
        arguments,  their  use is recommended to catch mistakes in these other
        arguments.[133X
  
  [31X2[131X   [33X[0;6Y[9XedgesOfVertices[109X:  A list that has an entry for each vertex (a positive
        integer).  This  entry  has  to  be  a  list of the incident edges (as
        positive integers) of this vertex.[133X
  
  [31X3[131X   [33X[0;6Y[9XfacesOfEdges[109X:  A  list  that  has  an  entry for each edge (a positive
        integer).  This  entry  has  to  be  a  list of the incident faces (as
        positive integers) of this edge.[133X
  
  [33X[0;0YThe  method  checks whether the answer to each of the following questions is
  true. None of these checks will be performed by the NC-version.[133X
  
  [30X    [33X[0;6YAre  the  optional arguments [3Xvertices[103X, [3Xedges[103X and [3Xfaces[103X either positive
        integers or sets of positive integers?[133X
  
  [30X    [33X[0;6YAre [3XedgesOfVertices[103X and [3XfacesOfEdges[103X lists where the entries are lists
        of positive integers?[133X
  
  [30X    [33X[0;6YDoes  every  edge  of  the resulting polygonal complex has exactly two
        incident vertices?[133X
  
  [30X    [33X[0;6YDoes  every  face  of the resulting polygonal complex has at least two
        incident edges?[133X
  
  [30X    [33X[0;6YDoes every bound entry of [3XedgesOfFaces[103X contain at least two elements?[133X
  
  [30X    [33X[0;6YIf  [3Xvertices[103X  is  given,  is  it  equal  to  the  bound  positions  of
        [3XedgesOfVertices[103X?[133X
  
  [30X    [33X[0;6YAre     the    bound    positions    of    [3XfacesOfEdges[103X    equal    to
        [9XUnion[109X([3XedgesOfVertices[103X)?  If  [3Xedges[103X  is given, is it equal to those two
        sets?[133X
  
  [30X    [33X[0;6YIf [3Xfaces[103X is given, is it equal to [9XUnion[109X([3XfacesOfEdges[103X)?[133X
  
  [33X[0;0YAs  an  example  consider  the  following net of a simplicial surface: Image
  omitted in terminal text[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xsurf := PolygonalSurfaceByUpwardIncidence([127X[104X
    [4X[25X>[125X [27X     [[1,5,6,15],[1,2,7,8],[2,3,9,10],[3,4,11,12],[4,5,13,14],[127X[104X
    [4X[25X>[125X [27X      [6,16,17],[7,17,18],[8,18,19],[9,19,20],[10,20,21],[11,21,22],[127X[104X
    [4X[25X>[125X [27X      [12,22,23],[13,23,24],[14,24,25],[15,16,25]],[127X[104X
    [4X[25X>[125X [27X     [[2],[4],[6],[8],[10],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,8],[127X[104X
    [4X[25X>[125X [27X      [8,9],[9,10],[1,10],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10]]);;[127X[104X
    [4X[25Xgap>[125X [27XIsClosedSurface(surf);[127X[104X
    [4X[28Xfalse[128X[104X
    [4X[25Xgap>[125X [27XPerimeterOfHoles(surf);[127X[104X
    [4X[28X[ (v1, E1, v2, E2, v3, E3, v4, E4, v5, E5, v1), [128X[104X
    [4X[28X  (v6, E16, v15, E25, v14, E24, v13, E23, v12, E22, v11, E21, [128X[104X
    [4X[28X            v10, E20, v9, E19, v8, E18, v7, E17, v6) ][128X[104X
  [4X[32X[104X
  
  [1X4.2-3 TriangularComplexByUpwardIncidence[101X
  
  [33X[1;0Y[29X[2XTriangularComplexByUpwardIncidence[102X( [3XedgesOfVertices[103X, [3XfacesOfEdges[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XTriangularComplexByUpwardIncidence[102X( [3Xvertices[103X, [3Xedges[103X, [3Xfaces[103X, [3XedgesOfVertices[103X, [3XfacesOfEdges[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XTriangularComplexByUpwardIncidenceNC[102X( [3XedgesOfVertices[103X, [3XfacesOfEdges[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XTriangularComplexByUpwardIncidenceNC[102X( [3Xvertices[103X, [3Xedges[103X, [3Xfaces[103X, [3XedgesOfVertices[103X, [3XfacesOfEdges[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya triangular complex[133X
  
  [33X[0;0YThis  method constructs a triangular complex ([14X2.1[114X) where vertices, edges and
  faces  are  represented  by positive integers. It is based on the attributes
  [9XEdgesOfVertices[109X ([14X3.2-1[114X) and [9XFacesOfEdges[109X ([14X3.2-4[114X) and takes these arguments:[133X
  
  [31X1[131X   [33X[0;6YOPTIONAL:  Each of the optional arguments [3Xvertices[103X, [3Xedges[103X and [3Xfaces[103X is
        either a set of positive integers or a positive integer. In the latter
        case, an integer [22Xn[122X represents the set [22X[1,...,n][122X.[133X
  
        [33X[0;6YAlthough   these  arguments  can  be  deduced  from  the  non-optional
        arguments,  their  use is recommended to catch mistakes in these other
        arguments.[133X
  
  [31X2[131X   [33X[0;6Y[9XedgesOfVertices[109X:  A list that has an entry for each vertex (a positive
        integer).  This  entry  has  to  be  a  list of the incident edges (as
        positive integers) of this vertex.[133X
  
  [31X3[131X   [33X[0;6Y[9XfacesOfEdges[109X:  A  list  that  has  an  entry for each edge (a positive
        integer).  This  entry  has  to  be  a  list of the incident faces (as
        positive integers) of this edge.[133X
  
  [33X[0;0YThe  method  checks whether the answer to each of the following questions is
  true. None of these checks will be performed by the NC-version.[133X
  
  [30X    [33X[0;6YAre  the  optional arguments [3Xvertices[103X, [3Xedges[103X and [3Xfaces[103X either positive
        integers or sets of positive integers?[133X
  
  [30X    [33X[0;6YAre [3XedgesOfVertices[103X and [3XfacesOfEdges[103X lists where the entries are lists
        of positive integers?[133X
  
  [30X    [33X[0;6YDoes  every  edge  of  the resulting polygonal complex has exactly two
        incident vertices?[133X
  
  [30X    [33X[0;6YDoes  every  face  of the resulting polygonal complex has at least two
        incident edges?[133X
  
  [30X    [33X[0;6YDoes every bound entry of [3XedgesOfFaces[103X contain at least two elements?[133X
  
  [30X    [33X[0;6YIf  [3Xvertices[103X  is  given,  is  it  equal  to  the  bound  positions  of
        [3XedgesOfVertices[103X?[133X
  
  [30X    [33X[0;6YAre     the    bound    positions    of    [3XfacesOfEdges[103X    equal    to
        [9XUnion[109X([3XedgesOfVertices[103X)?  If  [3Xedges[103X  is given, is it equal to those two
        sets?[133X
  
  [30X    [33X[0;6YIf [3Xfaces[103X is given, is it equal to [9XUnion[109X([3XfacesOfEdges[103X)?[133X
  
  [33X[0;0YAs  an  example  consider  the following net of a triangular complex (at the
  vertices  and  edges  marked red, there are ramifications): Image omitted in
  terminal text[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xcomplex := TriangularComplexByUpwardIncidence([127X[104X
    [4X[25X>[125X [27X       [[1,19,7,25,13,29],[2,19,20],[127X[104X
    [4X[25X>[125X [27X        [20,3,21,9,26,15,30],[22,4,21,10,27,16,31],[127X[104X
    [4X[25X>[125X [27X        [23,5,22],[6,23,12,28,18,32],[1,2,3,4,5,6],[26,8,25],[127X[104X
    [4X[25X>[125X [27X        [7,8,9,10,11,12],[27,11,28],[30,14,29],[13,14,15,16,17,18],[127X[104X
    [4X[25X>[125X [27X        [31,17,32]],[127X[104X
    [4X[25X>[125X [27X       [[1],[1,2],[2,3],[3,4],[4,5],[5],[127X[104X
    [4X[25X>[125X [27X        [6],[6,7],[7,8],[8,9],[9,10],[10],[127X[104X
    [4X[25X>[125X [27X        [11],[11,12],[12,13],[13,14],[14,15],[15],[127X[104X
    [4X[25X>[125X [27X        [1],[2],[3,8,13],[4],[5],,[6],[7],[9],[10],[11],[12],[14],[15]]);;[127X[104X
    [4X[25Xgap>[125X [27XUmbrellaPathPartitionOfVertex(complex, 1);[127X[104X
    [4X[28X[ | e1, F1, e19 |, | e7, F6, e25 |, | e13, F11, e29 | ][128X[104X
    [4X[25Xgap>[125X [27XUmbrellaPathPartitionOfVertex(complex, 6);[127X[104X
    [4X[28X[ | e6, F5, e23 |, | e12, F10, e28 |, | e18, F15, e32 | ][128X[104X
    [4X[25Xgap>[125X [27XFacesOfEdge(complex, 21);[127X[104X
    [4X[28X[ 3, 8, 13 ][128X[104X
  [4X[32X[104X
  
  [1X4.2-4 SimplicialSurfaceByUpwardIncidence[101X
  
  [33X[1;0Y[29X[2XSimplicialSurfaceByUpwardIncidence[102X( [3XedgesOfVertices[103X, [3XfacesOfEdges[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XSimplicialSurfaceByUpwardIncidence[102X( [3Xvertices[103X, [3Xedges[103X, [3Xfaces[103X, [3XedgesOfVertices[103X, [3XfacesOfEdges[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XSimplicialSurfaceByUpwardIncidenceNC[102X( [3XedgesOfVertices[103X, [3XfacesOfEdges[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XSimplicialSurfaceByUpwardIncidenceNC[102X( [3Xvertices[103X, [3Xedges[103X, [3Xfaces[103X, [3XedgesOfVertices[103X, [3XfacesOfEdges[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya simplicial surface[133X
  
  [33X[0;0YThis  method constructs a simplicial surface ([14X2.3[114X) where vertices, edges and
  faces  are  represented  by positive integers. It is based on the attributes
  [9XEdgesOfVertices[109X ([14X3.2-1[114X) and [9XFacesOfEdges[109X ([14X3.2-4[114X) and takes these arguments:[133X
  
  [31X1[131X   [33X[0;6YOPTIONAL:  Each of the optional arguments [3Xvertices[103X, [3Xedges[103X and [3Xfaces[103X is
        either a set of positive integers or a positive integer. In the latter
        case, an integer [22Xn[122X represents the set [22X[1,...,n][122X.[133X
  
        [33X[0;6YAlthough   these  arguments  can  be  deduced  from  the  non-optional
        arguments,  their  use is recommended to catch mistakes in these other
        arguments.[133X
  
  [31X2[131X   [33X[0;6Y[9XedgesOfVertices[109X:  A list that has an entry for each vertex (a positive
        integer).  This  entry  has  to  be  a  list of the incident edges (as
        positive integers) of this vertex.[133X
  
  [31X3[131X   [33X[0;6Y[9XfacesOfEdges[109X:  A  list  that  has  an  entry for each edge (a positive
        integer).  This  entry  has  to  be  a  list of the incident faces (as
        positive integers) of this edge.[133X
  
  [33X[0;0YThe  method  checks whether the answer to each of the following questions is
  true. None of these checks will be performed by the NC-version.[133X
  
  [30X    [33X[0;6YAre  the  optional arguments [3Xvertices[103X, [3Xedges[103X and [3Xfaces[103X either positive
        integers or sets of positive integers?[133X
  
  [30X    [33X[0;6YAre [3XedgesOfVertices[103X and [3XfacesOfEdges[103X lists where the entries are lists
        of positive integers?[133X
  
  [30X    [33X[0;6YDoes  every  edge  of  the resulting polygonal complex has exactly two
        incident vertices?[133X
  
  [30X    [33X[0;6YDoes  every  face  of the resulting polygonal complex has at least two
        incident edges?[133X
  
  [30X    [33X[0;6YDoes every bound entry of [3XedgesOfFaces[103X contain at least two elements?[133X
  
  [30X    [33X[0;6YIf  [3Xvertices[103X  is  given,  is  it  equal  to  the  bound  positions  of
        [3XedgesOfVertices[103X?[133X
  
  [30X    [33X[0;6YAre     the    bound    positions    of    [3XfacesOfEdges[103X    equal    to
        [9XUnion[109X([3XedgesOfVertices[103X)?  If  [3Xedges[103X  is given, is it equal to those two
        sets?[133X
  
  [30X    [33X[0;6YIf [3Xfaces[103X is given, is it equal to [9XUnion[109X([3XfacesOfEdges[103X)?[133X
  
  [33X[0;0YAs  an  example  consider  the  following net of a simplicial surface: Image
  omitted in terminal text[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xsurf := SimplicialSurfaceByUpwardIncidence([127X[104X
    [4X[25X>[125X [27X     [[1,7,8,11],[2,8,9,12],,[5,7,15,18,20],[1,2,3,4,5],[127X[104X
    [4X[25X>[125X [27X      [3,9,13,17,19],[11,12,13,14,15],,[4,17,18,22],[14,19,20,22]],[127X[104X
    [4X[25X>[125X [27X     [[1,2],[2,3],[3,4],[4,5],[1,5],,[1,11],[2,12],[3,13],,[127X[104X
    [4X[25X>[125X [27X      [11,12],[12,13],[13,14],[14,15],[11,15],,[127X[104X
    [4X[25X>[125X [27X      [4,9],[5,10],[9,14],[10,15],,[9,10]]);;[127X[104X
    [4X[25Xgap>[125X [27XVertices(surf);[127X[104X
    [4X[28X[ 1, 2, 4, 5, 6, 7, 9, 10 ][128X[104X
    [4X[25Xgap>[125X [27XEdges(surf);[127X[104X
    [4X[28X[ 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22 ][128X[104X
    [4X[25Xgap>[125X [27XFaces(surf);[127X[104X
    [4X[28X[ 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15 ][128X[104X
    [4X[25Xgap>[125X [27XEulerCharacteristic(surf);[127X[104X
    [4X[28X2[128X[104X
    [4X[25Xgap>[125X [27XIsClosedSurface(surf);[127X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  
  [1X4.3 [33X[0;0YVerticesInFaces[133X[101X
  
  [33X[0;0YThe  [13XVerticesInFaces[113X-constructors are based on the attribute [9XVerticesOfFaces[109X
  ([14X3.2-5[114X)   for   triangular   faces   and  an  oriented  version  of  it  for
  non-triangular ones.[133X
  
  [33X[0;0YTo  use  the  constructor  we  need  to  know the incidence relation between
  vertices  and  faces  (the  edge  information  has to be deduced from that).
  Therefore  it  is  assumed  that  every  edge  is uniquely identified by its
  incident  vertices.  Apart  from this restriction, every polygonal structure
  from chapter [14X2[114X can be build.[133X
  
  [33X[0;0YConsider the following polygonal surface: Image omitted in terminal text[133X
  
  [33X[0;0YThe face with number [22X4[122X is incident to the vertices [22X[3,7,11][122X. Since the edges
  of  a triangle are uniquely determined by its vertices, the constructor will
  assume that the edges [22X[3,7][122X, [22X[3,11][122X and [22X[7,11][122X exist.[133X
  
  [33X[0;0YThe  face [22X9[122X with the incident vertices [22X[7,11,13][122X is handled in the same way.
  This triangle also contains an edge with vertices [22X7[122X and [22X11[122X, which is assumed
  to be the same edge [22X[7,11][122X of the face [22X4[122X.[133X
  
  [33X[0;0YThis  deduction  of  edges  does not work if a face is incident to more than
  three  vertices.  Here  the face with number [22X1[122X is incident to four different
  vertices:  [22X[3,5,7,13][122X.  As it is not obvious which of these are connected by
  edges, the method needs additional information. If the vertices are given as
  the  list  [22X[3,5,13,7][122X,  the edges can be defined by adjacent entries in this
  list (the first and last entry count as adjacent).[133X
  
  [33X[0;0YThe full rules for the edge deduction are:[133X
  
  [30X    [33X[0;6YAn edge is uniquely identified by its incident vertices.[133X
  
  [30X    [33X[0;6YIf  a  face  is  given  by  the  vertex list [22X[v_1, v_2, ..., v_k][122X then
        adjacent  vertices in the list are assumed to form an edge of the face
        (first  and last vertex count as adjacent). In this case we would have
        the edges [22X[v_1,v_2][122X, [22X[v_2,v_3][122X, ..., [22X[v_k,v_1][122X.[133X
  
  [33X[0;0YThe  incidence  information  is  given  as a list that has an entry for each
  face.  For  every  face this entry is a list of the incident vertices, where
  the  order  of  the  vertices in the list determines the edges (if there are
  more than three vertices).[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XverticesInFaces := [ [3,5,13,7], , , [3,11,7], , , , , [7,11,13] ];[127X[104X
    [4X[28X[ [ 3, 5, 13, 7 ],,, [ 3, 11, 7 ],,,,, [ 7, 11, 13 ] ][128X[104X
    [4X[25Xgap>[125X [27XPolygonalSurfaceByVerticesInFaces( verticesInFaces );;[127X[104X
  [4X[32X[104X
  
  [33X[0;0YThe  [13XVerticesInFaces[113X-constructors also allow the optional arguments [3Xvertices[103X
  and [3Xfaces[103X. If those sets are given, the incidence information is checked for
  compatibility  with them. This is very useful in practice to notice typos in
  the   incidence  relations.  As  this  can  be  deduced  from  the  argument
  [3XverticesInFaces[103X it is not necessary to give these optional arguments.[133X
  
  [33X[0;0YIn  practice  it  is  common  to make mistakes in manually typing this list.
  Especially  in  a  situation like this it is recommended to use the optional
  arguments to catch some mistakes.[133X
  
  [33X[0;0YTo  make  this easier, each of these optional arguments can be replaced by a
  positive integer [3Xn[103X (which will be interpreted as the set [22X[1,...,n][122X).[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XPolygonalSurfaceByVerticesInFaces( [3,5,7,11,13], [1,4,9], verticesInFaces );;[127X[104X
  [4X[32X[104X
  
  [1X4.3-1 PolygonalComplexByVerticesInFaces[101X
  
  [33X[1;0Y[29X[2XPolygonalComplexByVerticesInFaces[102X( [3XverticesInFaces[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XPolygonalComplexByVerticesInFaces[102X( [3Xvertices[103X, [3Xfaces[103X, [3XverticesInFaces[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XPolygonalComplexByVerticesInFacesNC[102X( [3XverticesInFaces[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XPolygonalComplexByVerticesInFacesNC[102X( [3Xvertices[103X, [3Xfaces[103X, [3XverticesInFaces[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya polygonal complex[133X
  
  [33X[0;0YThis  method  constructs a polygonal complex ([14X2.1[114X) where vertices, edges and
  faces  are  represented  by positive integers. It is based on the attributes
  [9XVerticesOfFaces[109X  ([14X3.2-5[114X)  and requires that the edges be uniquely defined by
  their incident vertices. It takes the following arguments:[133X
  
  [31X1[131X   [33X[0;6YOPTIONAL:  Each of the optional arguments [3Xvertices[103X, [3Xedges[103X and [3Xfaces[103X is
        either a set of positive integers or a positive integer. In the latter
        case, an integer [22Xn[122X represents the set [22X[1,...,n][122X.[133X
  
        [33X[0;6YAlthough   these  arguments  can  be  deduced  from  the  non-optional
        arguments,  their  use is recommended to catch mistakes in these other
        arguments.[133X
  
  [31X2[131X   [33X[0;6Y[9XverticesInFaces[109X:  A  list  that has an entry for each positive integer
        corresponding  to  a  face.  This entry is a list of positive integers
        [22X[v_1, v_2 , ..., v_k ][122X, each corresponding to a vertex incident to the
        face. Moreover, two consecutive vertices in this list are the vertices
        of  an edge incident to the face (here the first and last vertex count
        as consecutive).[133X
  
  [33X[0;0YThe  method  checks whether the answer to each of the following questions is
  true. None of these checks will be performed by the NC-version.[133X
  
  [30X    [33X[0;6YAre  the  optional arguments [3Xvertices[103X, [3Xedges[103X and [3Xfaces[103X either positive
        integers or sets of positive integers?[133X
  
  [30X    [33X[0;6YIs  [3XverticesInFaces[103X  a  list  whose  entries  are  lists  of  pairwise
        different positive integers?[133X
  
  [30X    [33X[0;6YDoes  every  bound  entry  of  [3XverticesInFaces[103X  contain  at  least two
        elements?[133X
  
  [30X    [33X[0;6YIf [3Xvertices[103X is given, is [9XUnion[109X([3XverticesInFaces[103X) = [3Xvertices[103X?[133X
  
  [30X    [33X[0;6YIf   [3Xfaces[103X   is   given,  is  it  equal  to  the  bound  positions  of
        [3XverticesInFaces[103X?[133X
  
  [33X[0;0YAs an example consider the following net of a polygonal complex (note, there
  are both vertex and edge ramifications): Image omitted in terminal text[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xcomplex := PolygonalComplexByVerticesInFaces([127X[104X
    [4X[25X>[125X [27X       [[1,2,5],[1,2,5],[2,3,6,5],[2,3,6,5],[1,6,3],[1,3,6]]);;[127X[104X
    [4X[25Xgap>[125X [27XRamifiedVertices(complex);[127X[104X
    [4X[28X[ 1 ][128X[104X
    [4X[25Xgap>[125X [27XChaoticVertices(complex);[127X[104X
    [4X[28X[ 2, 3, 5, 6 ][128X[104X
  [4X[32X[104X
  
  [1X4.3-2 PolygonalSurfaceByVerticesInFaces[101X
  
  [33X[1;0Y[29X[2XPolygonalSurfaceByVerticesInFaces[102X( [3XverticesInFaces[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XPolygonalSurfaceByVerticesInFaces[102X( [3Xvertices[103X, [3Xfaces[103X, [3XverticesInFaces[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XPolygonalSurfaceByVerticesInFacesNC[102X( [3XverticesInFaces[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XPolygonalSurfaceByVerticesInFacesNC[102X( [3Xvertices[103X, [3Xfaces[103X, [3XverticesInFaces[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya polygonal surface[133X
  
  [33X[0;0YThis  method  constructs a polygonal surface ([14X2.3[114X) where vertices, edges and
  faces  are  represented  by positive integers. It is based on the attributes
  [9XVerticesOfFaces[109X  ([14X3.2-5[114X)  and requires that the edges be uniquely defined by
  their incident vertices. It takes the following arguments:[133X
  
  [31X1[131X   [33X[0;6YOPTIONAL:  Each of the optional arguments [3Xvertices[103X, [3Xedges[103X and [3Xfaces[103X is
        either a set of positive integers or a positive integer. In the latter
        case, an integer [22Xn[122X represents the set [22X[1,...,n][122X.[133X
  
        [33X[0;6YAlthough   these  arguments  can  be  deduced  from  the  non-optional
        arguments,  their  use is recommended to catch mistakes in these other
        arguments.[133X
  
  [31X2[131X   [33X[0;6Y[9XverticesInFaces[109X:  A  list  that has an entry for each positive integer
        corresponding  to  a  face.  This entry is a list of positive integers
        [22X[v_1, v_2 , ..., v_k ][122X, each corresponding to a vertex incident to the
        face. Moreover, two consecutive vertices in this list are the vertices
        of  an edge incident to the face (here the first and last vertex count
        as consecutive).[133X
  
  [33X[0;0YThe  method  checks whether the answer to each of the following questions is
  true. None of these checks will be performed by the NC-version.[133X
  
  [30X    [33X[0;6YAre  the  optional arguments [3Xvertices[103X, [3Xedges[103X and [3Xfaces[103X either positive
        integers or sets of positive integers?[133X
  
  [30X    [33X[0;6YIs  [3XverticesInFaces[103X  a  list  whose  entries  are  lists  of  pairwise
        different positive integers?[133X
  
  [30X    [33X[0;6YDoes  every  bound  entry  of  [3XverticesInFaces[103X  contain  at  least two
        elements?[133X
  
  [30X    [33X[0;6YIf [3Xvertices[103X is given, is [9XUnion[109X([3XverticesInFaces[103X) = [3Xvertices[103X?[133X
  
  [30X    [33X[0;6YIf   [3Xfaces[103X   is   given,  is  it  equal  to  the  bound  positions  of
        [3XverticesInFaces[103X?[133X
  
  [33X[0;0YAs  an  example  consider  the  following net of a simplicial surface: Image
  omitted in terminal text[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xsurf := PolygonalSurfaceByVerticesInFaces([127X[104X
    [4X[25X>[125X [27X     [[1,6,15],[1,2,7,6],[2,7,8],[2,3,9,8],[3,9,10],[3,4,11,10],[4,11,12],[127X[104X
    [4X[25X>[125X [27X      [4,5,13,12],[5,13,14],[1,5,14,15]]);;[127X[104X
    [4X[25Xgap>[125X [27XIsClosedSurface(surf);[127X[104X
    [4X[28Xfalse[128X[104X
  [4X[32X[104X
  
  [1X4.3-3 TriangularComplexByVerticesInFaces[101X
  
  [33X[1;0Y[29X[2XTriangularComplexByVerticesInFaces[102X( [3XverticesInFaces[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XTriangularComplexByVerticesInFaces[102X( [3Xvertices[103X, [3Xfaces[103X, [3XverticesInFaces[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XTriangularComplexByVerticesInFacesNC[102X( [3XverticesInFaces[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XTriangularComplexByVerticesInFacesNC[102X( [3Xvertices[103X, [3Xfaces[103X, [3XverticesInFaces[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya triangular complex[133X
  
  [33X[0;0YThis  method constructs a triangular complex ([14X2.1[114X) where vertices, edges and
  faces  are  represented  by positive integers. It is based on the attributes
  [9XVerticesOfFaces[109X  ([14X3.2-5[114X)  and requires that the edges be uniquely defined by
  their incident vertices. It takes the following arguments:[133X
  
  [31X1[131X   [33X[0;6YOPTIONAL:  Each of the optional arguments [3Xvertices[103X, [3Xedges[103X and [3Xfaces[103X is
        either a set of positive integers or a positive integer. In the latter
        case, an integer [22Xn[122X represents the set [22X[1,...,n][122X.[133X
  
        [33X[0;6YAlthough   these  arguments  can  be  deduced  from  the  non-optional
        arguments,  their  use is recommended to catch mistakes in these other
        arguments.[133X
  
  [31X2[131X   [33X[0;6Y[9XverticesInFaces[109X:  A  list  that has an entry for each positive integer
        corresponding  to  a  face.  This entry is a list of positive integers
        [22X[v_1, v_2 , ..., v_k ][122X, each corresponding to a vertex incident to the
        face. Moreover, two consecutive vertices in this list are the vertices
        of  an edge incident to the face (here the first and last vertex count
        as consecutive).[133X
  
  [33X[0;0YThe  method  checks whether the answer to each of the following questions is
  true. None of these checks will be performed by the NC-version.[133X
  
  [30X    [33X[0;6YAre  the  optional arguments [3Xvertices[103X, [3Xedges[103X and [3Xfaces[103X either positive
        integers or sets of positive integers?[133X
  
  [30X    [33X[0;6YIs  [3XverticesInFaces[103X  a  list  whose  entries  are  lists  of  pairwise
        different positive integers?[133X
  
  [30X    [33X[0;6YDoes  every  bound  entry  of  [3XverticesInFaces[103X  contain  at  least two
        elements?[133X
  
  [30X    [33X[0;6YIf [3Xvertices[103X is given, is [9XUnion[109X([3XverticesInFaces[103X) = [3Xvertices[103X?[133X
  
  [30X    [33X[0;6YIf   [3Xfaces[103X   is   given,  is  it  equal  to  the  bound  positions  of
        [3XverticesInFaces[103X?[133X
  
  [33X[0;0YAs  an  example  consider  the following net of a triangular complex (at the
  vertices  and  edges  marked red, there are ramifications): Image omitted in
  terminal text[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xcomplex := TriangularComplexByVerticesInFaces([127X[104X
    [4X[25X>[125X [27X       [[1,2,7],[2,3,7],[3,4,7],[4,5,7],[5,6,7],[127X[104X
    [4X[25X>[125X [27X        [1,8,9],[3,8,9],[3,4,9],[4,10,9],[6,10,9],[127X[104X
    [4X[25X>[125X [27X        [1,11,12],[3,11,12],[3,4,12],[4,13,12],[6,13,12]]);;[127X[104X
  [4X[32X[104X
  
  [1X4.3-4 SimplicialSurfaceByVerticesInFaces[101X
  
  [33X[1;0Y[29X[2XSimplicialSurfaceByVerticesInFaces[102X( [3XverticesInFaces[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XSimplicialSurfaceByVerticesInFaces[102X( [3Xvertices[103X, [3Xfaces[103X, [3XverticesInFaces[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XSimplicialSurfaceByVerticesInFacesNC[102X( [3XverticesInFaces[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XSimplicialSurfaceByVerticesInFacesNC[102X( [3Xvertices[103X, [3Xfaces[103X, [3XverticesInFaces[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya simplicial surface[133X
  
  [33X[0;0YThis  method constructs a simplicial surface ([14X2.3[114X) where vertices, edges and
  faces  are  represented  by positive integers. It is based on the attributes
  [9XVerticesOfFaces[109X  ([14X3.2-5[114X)  and requires that the edges be uniquely defined by
  their incident vertices. It takes the following arguments:[133X
  
  [31X1[131X   [33X[0;6YOPTIONAL:  Each of the optional arguments [3Xvertices[103X, [3Xedges[103X and [3Xfaces[103X is
        either a set of positive integers or a positive integer. In the latter
        case, an integer [22Xn[122X represents the set [22X[1,...,n][122X.[133X
  
        [33X[0;6YAlthough   these  arguments  can  be  deduced  from  the  non-optional
        arguments,  their  use is recommended to catch mistakes in these other
        arguments.[133X
  
  [31X2[131X   [33X[0;6Y[9XverticesInFaces[109X:  A  list  that has an entry for each positive integer
        corresponding  to  a  face.  This entry is a list of positive integers
        [22X[v_1, v_2 , ..., v_k ][122X, each corresponding to a vertex incident to the
        face. Moreover, two consecutive vertices in this list are the vertices
        of  an edge incident to the face (here the first and last vertex count
        as consecutive).[133X
  
  [33X[0;0YThe  method  checks whether the answer to each of the following questions is
  true. None of these checks will be performed by the NC-version.[133X
  
  [30X    [33X[0;6YAre  the  optional arguments [3Xvertices[103X, [3Xedges[103X and [3Xfaces[103X either positive
        integers or sets of positive integers?[133X
  
  [30X    [33X[0;6YIs  [3XverticesInFaces[103X  a  list  whose  entries  are  lists  of  pairwise
        different positive integers?[133X
  
  [30X    [33X[0;6YDoes  every  bound  entry  of  [3XverticesInFaces[103X  contain  at  least two
        elements?[133X
  
  [30X    [33X[0;6YIf [3Xvertices[103X is given, is [9XUnion[109X([3XverticesInFaces[103X) = [3Xvertices[103X?[133X
  
  [30X    [33X[0;6YIf   [3Xfaces[103X   is   given,  is  it  equal  to  the  bound  positions  of
        [3XverticesInFaces[103X?[133X
  
  [33X[0;0YAs  an  example  consider  the  following net of a simplicial surface: Image
  omitted in terminal text[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xsurf := SimplicialSurfaceByVerticesInFaces([127X[104X
    [4X[25X>[125X [27X     [[1,4,5],[1,2,5],[2,5,6],[5,6,9],[4,5,9],,,,[127X[104X
    [4X[25X>[125X [27X      [6,9,10],[4,9,10],[1,4,7],[1,2,7],[2,6,7],[6,7,10],[4,7,10]]);;[127X[104X
    [4X[25Xgap>[125X [27XVertices(surf);[127X[104X
    [4X[28X[ 1, 2, 4, 5, 6, 7, 9, 10 ][128X[104X
    [4X[25Xgap>[125X [27XNumberOfEdges(surf);[127X[104X
    [4X[28X18[128X[104X
    [4X[25Xgap>[125X [27XFaces(surf);[127X[104X
    [4X[28X[ 1, 2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15 ][128X[104X
    [4X[25Xgap>[125X [27XEulerCharacteristic(surf);[127X[104X
    [4X[28X2[128X[104X
    [4X[25Xgap>[125X [27XIsClosedSurface(surf);[127X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  
  [1X4.4 [33X[0;0YUmbrella Descriptors[133X[101X
  
  [33X[0;0YA  very  useful  way of describing surfaces is by listing the umbrella paths
  around each vertex. Formally, an umbrella descriptor of a simplicial surface
  is  a  list  [3Xumbdesc[103X,  describing a simplicial surface. The bound entries in
  [3Xumbdesc[103X  are  cyclic  permutations or lists of integers. The set of faces of
  the  surface  is  the  set  of  points  which  either  are moved by a cyclic
  permutation  or  occur  in  a  list  in  [3Xumbdesc[103X.  The  edges of the surface
  correspond  to pairs of faces [22X(i,j)[122X, where either some cycle in [3Xumbdesc[103X maps
  [22Xi[122X to [22Xj[122X or [22Xi[122X and [22Xj[122X occur as neighbours in a list. The vertices of the surface
  are  the  positive integers corresponding to the bound positions of [3Xumbdesc[103X.
  If position [22Xi[122X of [3Xumbdesc[103X is bound, then the [22Xi[122X-th entry represents the vertex
  with  name [22Xi[122X. If the vertex named [22Xi[122X is inner, then the [22Xi[122X-th entry in [3Xumbdesc[103X
  is a cyclic permutation of the faces in the umbrella path around the vertex,
  mapping a face to an adjacent face. The order of the permutation is equal to
  the  degree  of the vertex. If the vertex named [22Xi[122X is a boundary vertex, then
  the  [22Xi[122X-th entry in [3Xumbdesc[103X is a list consisting of the faces in the umbrella
  path  of  the  vertex  such  that adjacent faces are consecutive and the two
  faces  with boundary edges are the first and the last entry of the list. The
  length of the list is equal to the degree of the vertex.[133X
  
  [1X4.4-1 UmbrellaDescriptorOfSurface[101X
  
  [33X[1;0Y[29X[2XUmbrellaDescriptorOfSurface[102X( [3Xsurface[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya list[133X
  
  [33X[0;0YLet [3Xsurf[103X be a simplicial surface. This method returns an umbrella descriptor
  of  [3Xsurf[103X,  where  an  umbrella  descriptor of a simplicial surface is a list
  [3Xumbdesc[103X,  describing  a simplicial surface. The bound entries in [3Xumbdesc[103X are
  cyclic permutations or lists of integers. The set of faces of the surface is
  the set of points which either are moved by a cyclic permutation or occur in
  a  list  in  [3Xumbdesc[103X.  The edges of the surface correspond to pairs of faces
  [22X(i,j)[122X,  where  either  some cycle in [3Xumbdesc[103X maps [22Xi[122X to [22Xj[122X or [22Xi[122X and [22Xj[122X occur as
  neighbours  in a list. The vertices of the surface are the positive integers
  corresponding to the bound positions of [3Xumbdesc[103X. If position [22Xi[122X of [3Xumbdesc[103X is
  bound,  then the [22Xi[122X-th entry represents the vertex with name [22Xi[122X. If the vertex
  named  [22Xi[122X is inner, then the [22Xi[122X-th entry in [3Xumbdesc[103X is a cyclic permutation of
  the  faces  in  the  umbrella  path  around the vertex, mapping a face to an
  adjacent  face.  The  order of the permutation is equal to the degree of the
  vertex.  If  the vertex named [22Xi[122X is a boundary vertex, then the [22Xi[122X-th entry in
  [3Xumbdesc[103X is a list consisting of the faces in the umbrella path of the vertex
  such  that  adjacent  faces  are consecutive and the two faces with boundary
  edges  are  the first and the last entry of the list. The length of the list
  is equal to the degree of the vertex.[133X
  
  [33X[0;0YAs  an example consider the following net of a simplicial surface. Note that
  the  surface  has  boundary  edges.  Moreover, the vertices 1,2,3, and 4 are
  inner  vertices,  while 5,6,7,8,9, and 10 are not. Accordingly, the umbrella
  descriptor  of  the  surface  will  consist  of  cyclic permutations for the
  vertices 1,2,3, and 4 and of lists for the remaining vertices. Image omitted
  in terminal text[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xsurf := SimplicialSurfaceByVerticesInFaces( [ [ 1, 2, 5 ], [ 1, 3, 5 ],[127X[104X
    [4X[25X>[125X [27X     [ 1, 3, 6 ], [ 1, 4, 6 ], [ 1, 4, 7 ], [ 1, 2, 7 ], [ 2, 7, 8 ], [127X[104X
    [4X[25X>[125X [27X     [ 2, 5, 8 ], [ 3, 5, 9 ], [ 3, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ] ]);;[127X[104X
    [4X[25Xgap>[125X [27XUmbrellaDescriptorOfSurface(surf);[127X[104X
    [4X[28X[ (1,2,3,4,5,6), (1,8,7,6), (2,9,10,3), (4,11,12,5), [ 8, 1, 2, 9 ],[128X[104X
    [4X[28X [ 10, 3, 4, 11 ], [ 7, 6, 5, 12 ], [ 8, 7 ], [ 9, 10 ], [ 11, 12 ] ][128X[104X
  [4X[32X[104X
  
  [1X4.4-2 UmbrellaTipDescriptorOfSurface[101X
  
  [33X[1;0Y[29X[2XUmbrellaTipDescriptorOfSurface[102X( [3Xsurface[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya list[133X
  
  [33X[0;0YLet  [3Xsurf[103X  be  a  vertex faithful simplicial surface. This method returns an
  umbrella  tip  descriptor  of  [3Xsurf[103X,  where  an umbrella tip descriptor of a
  simplicial  surface  is  a list [3Xumbtipdesc[103X, describing a simplicial surface.
  The  bound  entries  in  [3Xumbtipdesc[103X  are  cyclic  permutations  or  lists of
  integers.  The  set  of  vertices  of the surface is the set of points which
  either  are  moved by a cyclic permutation or occur in a list in [3Xumbtipdesc[103X.
  The  edges  of the surface correspond to pairs of vertices [22X(i,j)[122X, where [22Xi[122X is
  the  bound  position of a cycle or list in [3Xumbtipdesc[103X and [22Xj[122X is a vertex that
  is  moved  by  that cycle or in that list with position [22Xi[122X in [3Xumbtipdesc[103X. The
  faces  correspond  to  tuples  of  vertices  [22X(i,j,k)[122X,  where  [22Xi[122X is the bound
  position  in [3Xumbtipdesc[103X of a cycle or list and either that cycle maps [22Xj[122X to [22Xk[122X
  or [22Xj[122X and [22Xk[122X occur in that list as neighbours. The vertices of the surface can
  also  be  described  as  the  positive  integers  corresponding to the bound
  positions of [3Xumbtipdesc[103X. If position [22Xi[122X of [3Xumbtipdesc[103X is bound, then the [22Xi[122X-th
  entry represents the vertex with name [22Xi[122X. An umbrella tip path of a vertex is
  the umbrella path of a vertex, but instead of an edge-face path, one obtains
  the  outer  vertices of that edge path. If the vertex named [22Xi[122X is inner, then
  the  [22Xi[122X-th entry in [3Xumbtipdesc[103X is a cyclic permutation of the vertices in the
  umbrella tip path around the vertex, mapping a vertex to an adjacent vertex.
  The  order of the permutation is equal to the vertex- and edge-degree of the
  vertex.  If  the vertex named [22Xi[122X is a boundary vertex, then the [22Xi[122X-th entry in
  [3Xumbtipdesc[103X  is a list consisting of the vertices in the umbrella tip path of
  the  vertex such that adjacent vertices are consecutive and the two vertices
  with boundary edges are the first and the last entry of the list. The length
  of the list is equal to the vertex- and edge-degree of the vertex.[133X
  
  [33X[0;0YAs  an example consider the following net of a simplicial surface. Note that
  the  surface  has  boundary  edges.  Moreover, the vertices 1,2,3, and 4 are
  inner  vertices,  while 5,6,7,8,9, and 10 are not. Accordingly, the umbrella
  tip  descriptor  of  the surface will consist of cyclic permutations for the
  vertices 1,2,3, and 4 and of lists for the remaining vertices. Image omitted
  in terminal text[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xsurf := SimplicialSurfaceByVerticesInFaces( [ [ 1, 2, 5 ], [ 1, 3, 5 ],[127X[104X
    [4X[25X>[125X [27X     [ 1, 3, 6 ], [ 1, 4, 6 ], [ 1, 4, 7 ], [ 1, 2, 7 ], [ 2, 7, 8 ], [127X[104X
    [4X[25X>[125X [27X     [ 2, 5, 8 ], [ 3, 5, 9 ], [ 3, 6, 9 ], [ 4, 6, 10 ], [ 4, 7, 10 ] ]);;[127X[104X
    [4X[25Xgap>[125X [27XUmbrellaTipDescriptorOfSurface(surf);[127X[104X
    [4X[28X[ (2,5,3,6,4,7), (1,5,8,7), (1,5,9,6), (1,6,10,7), [ 8, 2, 1, 3, 9 ], [128X[104X
    [4X[28X [ 9, 3, 1, 4, 10 ], [ 8, 2, 1, 4, 10 ], [ 5, 2, 7 ], [ 5, 3, 6 ], [128X[104X
    [4X[28X [ 6, 4, 7 ] ][128X[104X
  [4X[32X[104X
  
  [1X4.4-3 SimplicialSurfaceByUmbrellaDescriptor[101X
  
  [33X[1;0Y[29X[2XSimplicialSurfaceByUmbrellaDescriptor[102X( [3Xsurface[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya simplicial surface[133X
  
  [33X[0;0YThis  method  takes as input a list [3Xumbdesc[103X, which is an umbrella descriptor
  of  a  simplicial  surface,  see  ([14X4.4[114X). If the list [3Xumbdesc[103X is the umbrella
  descriptor  of a surface [3Xsurf[103X, the method returns [3Xsurf[103X. Otherwise it returns
  [3Xfalse[103X.[133X
  
  [33X[0;0YAs  an example consider the following net of a simplicial surface. Note that
  the  surface  has  boundary  edges.  Moreover, the vertices 1,2,3, and 4 are
  inner  vertices,  while 5,6,7,8,9, and 10 are not. Accordingly, the umbrella
  descriptor  of  the  surface  will  consist  of  cyclic permutations for the
  vertices  1,2,3,  and  4 and of lists for the remaining vertices, namely the
  umbrella descriptor is: [ (1,2,3,4,5,6), (1,8,7,6), (2,9,10,3), (4,11,12,5),
  [8,1,2,9],  [10,3,4,11], [7,6,5,12], [8,7], [9,10], [11,12] ]. Image omitted
  in terminal text[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xsurf := SimplicialSurfaceByUmbrellaDescriptor( [127X[104X
    [4X[25X>[125X [27X[ (1,2,3,4,5,6), (1,8,7,6), (2,9,10,3), (4,11,12,5), [ 8, 1, 2, 9 ],[127X[104X
    [4X[25X>[125X [27X [ 10, 3, 4, 11 ], [ 7, 6, 5, 12 ], [ 8, 7 ], [ 9, 10 ], [ 11, 12 ] ]);[127X[104X
    [4X[28Xsimplicial surface (10 vertices, 21 edges, and 12 faces)[128X[104X
    [4X[25Xgap>[125X [27XNumberOfFaces(surf);[127X[104X
    [4X[28X12[128X[104X
    [4X[25Xgap>[125X [27X Vertices(surf);[127X[104X
    [4X[28X[ 1 .. 10 ][128X[104X
    [4X[25Xgap>[125X [27XNumberOfEdges(surf);[127X[104X
    [4X[28X21[128X[104X
    [4X[25Xgap>[125X [27XFaces(surf);[127X[104X
    [4X[28X[ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ][128X[104X
    [4X[25Xgap>[125X [27XEulerCharacteristic(surf);[127X[104X
    [4X[28X1[128X[104X
    [4X[25Xgap>[125X [27XIsClosedSurface(surf);[127X[104X
    [4X[28Xfalse[128X[104X
  [4X[32X[104X
  
  [1X4.4-4 NormedUmbrellaDescriptor[101X
  
  [33X[1;0Y[29X[2XNormedUmbrellaDescriptor[102X( [3Xumbrelladescriptor[103X, [3Xface[103X ) [32X operation[133X
  [33X[1;0Y[29X[2XNormedUmbrellaDescriptor[102X( [3Xumbrelladescriptor[103X, [3Xface[103X, [3Xneighbours[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya list[133X
  
  [33X[0;0YA  normed umbrella descriptor is a special umbrella descriptor of a surface,
  where  an  umbrella  descriptor  is  described in ([14X4.4[114X). The normed umbrella
  descriptor  of  a  given umbrella descriptor [3Xumdesc[103X for the face [3Xface[103X and an
  optional  list  of  neighbours  [3Xneighbours[103X of [3Xface[103X is an umbrella descriptor
  [3Xnormedumdesc[103X  for  an  isomorphic surface. This new surface is obtained from
  the  original  surface  described by [3Xumdesc[103X by a renumbering [3Xf[103X of the faces,
  where  [3Xf[103X  is a bijection from the faces of the original surface to [1,..,[22Xn[122X],
  where  [22Xn[122X  is  the  number of faces. This renumbering is initialised follows:
  [3Xf(face)  =  1[103X.  The neighbours of [3Xface[103X are assigned the numbers 2, 3, ... If
  the  optional  argument  [3Xneighbours[103X  is  present, it must be a subset of the
  neighbours  of  [3Xface[103X and [3Xf(neighbours[i]) = i+1[103X and [3Xf(F)=infty[103X for all other
  faces   [3XF[103X.   Next   the   umbrellas  of  the  original  surface  are  sorted
  lexicographically,  that  is umbrella [3Xu[103X is less than umbrella [3Xv[103X if the image
  [3Xf(u)[103X  is  lexicographically  less that [3Xf(v)[103X as dihedral sequences. Each step
  takes  the  lexicographically least umbrella [3Xu[103X still containing a face [3XF[103X for
  which  [3Xf(F)=infty[103X and renumbers each such face in the umbrella consecutively
  in the order in which they occur in [3Xu[103X with numbers in [1,..,[22Xn[122X] not yet used,
  that is [3Xf(F)=j[103X for some [3Xj[103X in [1,..,[22Xn[122X].[133X
  
  [33X[0;0YConsider the surface on 10 faces consisting of exactly two inner vertices of
  degree  5 and having vertex counter [23Xv_2^6v_3^2v_5^2.[123X Its umbrella descriptor
  is  given  in the example below. We initialise renumbering of the faces such
  that  [3Xf(3)=1[103X  and the neighbours of 3, namely 2, 4, and 11 such that [3Xf(2)=2[103X,
  [3Xf(4)=3[103X  and [3Xf(11)=4,[103X and [3Xf(F) = infty[103X for the faces [3XF[103X in [1,5,6,7,8,10]. The
  lexicographically  least  umbrella is the umbrella containing the faces with
  new     numbers     1,     2,     and    3.    This    is    the    umbrella
  [3Xu=(2,3,4,10,6,8)=(3,4,10,6,8,2)[103X  as  [3Xf(u)  =  (1,2,infty,infty,infty,3)[103X.  We
  rename  the  three  face  numbers 10, 6, 8 mapped to infty with the smallest
  consecutive  numbers  in  [1..10] not yet used. Thus we set [3Xf(10)=5[103X, [3Xf(6)=6[103X,
  [3Xf(8)=7[103X, that is we rename faces 8, 6 and 10 in this umbrella to 5, 6, and 7.
  The lexicographically least umbrella whose image under [3Xf[103X contains infty is [3Xv
  =  (1,5,2,3,11,7) = (3,2,5,1,7,11)[103X as [3Xf(v) = (1,2,infty,infty,infty,4)[103X. Thus
  we  renumber  the faces 5, 1, and 7 to 8, 9, 10. This defines [3Xf[103X on all faces
  and yields the normed umbrella descriptor:[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27X ud := [ (1,5,2,3,11,7), (2,3,4,10,6,8),[127X[104X
    [4X[25X>[125X [27X  [ 4, 3, 11 ], [ 5, 2, 8 ], [ 1, 5 ], [ 1, 7 ], [ 7, 11 ], [127X[104X
    [4X[25X>[125X [27X  [ 4, 10 ], [ 6, 10 ], [ 6, 8 ] ];;[127X[104X
    [4X[25Xgap>[125X [27X nud := NormedUmbrellaDescriptor( ud, 3, [2,4,11]);[127X[104X
    [4X[28X[ [ 3, 1, 4 ], (1,2,5,6,7,3), (1,2,8,9,10,4), [ 3, 7 ], [ 4, 10 ], [128X[104X
    [4X[28X [ 5, 2, 8 ], [ 5, 6 ], [ 6, 7 ], [ 8, 9 ], [ 9, 10 ] ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YThe  original  surface  is  depicted  on the left, the surface of the normed
  umbrella descriptor is depicted on the right. Image omitted in terminal text[133X
  
  [33X[0;0YAs  an  example  consider  the following umbrella descriptor of a simplicial
  surface on 18 faces.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xud1 := [ (4,21,20,25), (5,7,8,6), (5,9,10,6), (7,11,12,8), (5,9,13,14,11,7), [127X[104X
    [4X[25X>[125X [27X(6,10,15,16,12,8), (9,13,17,21,20,15,10), (4,25,16,12,11,14,18),[127X[104X
    [4X[25X>[125X [27X(13,17,18,14), (15,16,25,20), (4,21,17,18) ];;[127X[104X
    [4X[25Xgap>[125X [27Xsurf1 := SimplicialSurfaceByUmbrellaDescriptor(ud1);;[127X[104X
    [4X[25Xgap>[125X [27Xud2 := NormedUmbrellaDescriptor(ud1, 7, [11, 8, 5]);[127X[104X
    [4X[28X[ (1,2,5,3), (1,2,6,7,8,4), (1,3,9,4), (2,5,10,11,12,13,6), (3,5,10,14,15,9),[128X[104X
    [4X[28X  (4,8,15,9), (6,7,16,13), (7,8,15,14,17,18,16), [128X[104X
    [4X[28X  (10,11,17,14), (11,12,18,17), (12,13,16,18) ][128X[104X
    [4X[25Xgap>[125X [27X surf2 := SimplicialSurfaceByUmbrellaDescriptor(ud2);;[127X[104X
    [4X[25Xgap>[125X [27XIsIsomorphic(surf1,surf2);[127X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  [33X[0;0YNote  that  this  function  can  also  be applied to umbrella descriptors of
  surfaces which are not closed.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xud1 := [ (1,2,3,4,5), (1,8,7,6,5), (1,8,19,20,9,2), (2,9,10,11,3), [127X[104X
    [4X[25X>[125X [27X (3,11,12,13,4), (4,13,14,15,6,5), (6,15,16,17,7), (7,17,18,19,8),[127X[104X
    [4X[25X>[125X [27X[ 10, 9, 20 ], [ 10, 11, 12 ], [ 12, 13, 14 ],[127X[104X
    [4X[25X>[125X [27X[ 14, 15, 16 ], [ 16, 17, 18 ], [ 18, 19, 20 ] ];;[127X[104X
    [4X[25Xgap>[125X [27Xsurf1 := SimplicialSurfaceByUmbrellaDescriptor(ud1);;[127X[104X
    [4X[25Xgap>[125X [27Xud2 := NormedUmbrellaDescriptor(ud1, 1, [2, 5, 8]);[127X[104X
    [4X[28X[ (1,2,5,6,3), (1,2,7,8,9,4), (1,3,10,11,4), (2,5,12,13,7), (3,6,14,15,16,10),[128X[104X
    [4X[28X  (4,9,17,18,11),   (5,6,14,19,12), [ 8, 7, 13 ], [ 8, 9, 17 ], (10,11,18,20,16),[128X[104X
    [4X[28X  [ 13, 12, 19 ],    [ 15, 14, 19 ], [ 15, 16, 20 ], [ 17, 18, 20 ] ][128X[104X
    [4X[25Xgap>[125X [27X surf2 := SimplicialSurfaceByUmbrellaDescriptor(ud2);;[127X[104X
    [4X[25Xgap>[125X [27XIsIsomorphic(surf1,surf2);[127X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  [1X4.4-5 DegreeSequenceOfUmbrellaDescriptor[101X
  
  [33X[1;0Y[29X[2XDegreeSequenceOfUmbrellaDescriptor[102X( [3Xumbdesc[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya list[133X
  
  [33X[0;0YSuppose  that  [3Xumdesc[103X  is  a  valid  umbrella descriptor of a surface [22XS[122X, see
  ([14X4.4[114X).  The degree sequence of [3Xumdesc[103X is a list [13Xdegseq[113X. If the [22Xi[122X-th entry of
  [3Xumdesc[103X  is  bound, then this entry corresponds to a vertex of [22XS[122X and the [22Xi[122X-th
  entry  of  [3Xdegseq[103X is a list [22X[d,b][122X, where [22Xd[122X is the degree of the [22Xi[122X-th vertex,
  and the boolean [22Xb[122X is true, if the [22Xi[122X-th vertex is inner and false else.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xvf := [ [ 1, 3, 4 ], [ 1, 2, 4 ], [ 2, 4, 5 ], [ 2, 5, 6 ],[127X[104X
    [4X[25X>[125X [27X[ 1, 2, 6 ], [ 1, 6, 7 ], [ 1, 7, 8 ], [ 1, 3, 8 ], [ 3, 4, 9 ],[127X[104X
    [4X[25X>[125X [27X[ 4, 9, 10 ], [ 4, 5, 10 ], [ 5, 10, 11 ], [ 5, 6, 11 ], [ 6, 11, 12 ],[127X[104X
    [4X[25X>[125X [27X[ 6, 7, 12 ], [ 7, 12, 13 ], [ 7, 8, 13 ], [ 8, 13, 14 ], [ 3, 8, 14 ],[127X[104X
    [4X[25X>[125X [27X[ 3, 9, 14 ] ];;[127X[104X
    [4X[25Xgap>[125X [27Xsurf := SimplicialSurfaceByVerticesInFaces(vf);[127X[104X
    [4X[28Xsimplicial surface (14 vertices, 33 edges, and 20 faces)[128X[104X
    [4X[25Xgap>[125X [27Xud := UmbrellaDescriptorOfSurface(surf);[127X[104X
    [4X[28X[ (1,8,7,6,5,2), (2,3,4,5), (1,9,20,19,8), (1,9,10,11,3,2), (3,11,12,13,4), [128X[104X
    [4X[28X  (4,13,14,15,6,5), (6,15,16,17,7), (7,17,18,19,8), [ 10, 9, 20 ], [128X[104X
    [4X[28X  [ 10, 11, 12 ], [ 12, 13, 14 ], [ 14, 15, 16 ], [ 16, 17, 18 ], [128X[104X
    [4X[28X  [ 20, 19, 18 ] ][128X[104X
    [4X[25Xgap>[125X [27XDegreeSequenceOfUmbrellaDescriptor(ud);[127X[104X
    [4X[28X[ [ 6, true ], [ 4, true ], [ 5, true ], [ 6, true ], [ 5, true ], [128X[104X
    [4X[28X  [ 6, true ], [ 5, true ], [ 5, true ], [ 3, false ], [ 3, false ], [128X[104X
    [4X[28X  [ 3, false ], [ 3, false ], [ 3, false ], [ 3, false ] ][128X[104X
  [4X[32X[104X
  
  [1X4.4-6 AllUmbrellaDescriptorsOfDegreeSequence[101X
  
  [33X[1;0Y[29X[2XAllUmbrellaDescriptorsOfDegreeSequence[102X( [3Xdegreeseq[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya list[133X
  
  [33X[0;0YGiven   a  DegreeSequence  of  a  normed  UmbrellaDescriptor  for  a  closed
  simplicial  surface which has no vertices of degree 2, this function returns
  the  umbrella  descriptors  of  all  simplicial surfaces which have a normed
  umbrella descriptor matching this degree sequence.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xud :=[127X[104X
    [4X[25X>[125X [27X[ (1,6,16,5), (1,6,15,4), (2,21,22,3), (9,11,12,10), (11,17,18,12), [127X[104X
    [4X[25X>[125X [27X (7,9,10,8), (7,13,14,8), (1,4,2,3,5), (17,23,21,22,24,18), [127X[104X
    [4X[25X>[125X [27X (3,22,24,20,16,5), (2,21,23,19,15,4), (6,16,20,14,13,19,15), [127X[104X
    [4X[25X>[125X [27X (7,13,19,23,17,11,9), (8,14,20,24,18,12,10) ];;[127X[104X
    [4X[25Xgap>[125X [27Xsurf := SimplicialSurfaceByUmbrellaDescriptor( ud );[127X[104X
    [4X[28Xsimplicial surface (14 vertices, 36 edges, and 24 faces)[128X[104X
    [4X[25Xgap>[125X [27Xnud := NormedUmbrellaDescriptor(ud, 1 );[127X[104X
    [4X[28X[ (1,2,5,6,3), (1,2,7,4), (1,3,8,4), (2,5,9,10,11,7), (3,6,12,13,14,8), [128X[104X
    [4X[28X  (4,7,11,15,16,14,8), (5,6,12,9), (9,10,17,18,13,12), [128X[104X
    [4X[28X  (10,11,15,19,20,21,17), (13,14,16,22,23,24,18), (15,16,22,19), [128X[104X
    [4X[28X  (17,18,24,21), (19,20,23,22), (20,21,24,23) ][128X[104X
    [4X[25Xgap>[125X [27Xds := DegreeSequenceOfUmbrellaDescriptor(nud);[127X[104X
    [4X[28X[ [ 5, true ], [ 4, true ], [ 4, true ], [ 6, true ], [ 6, true ], [128X[104X
    [4X[28X  [ 7, true ], [ 4, true ], [ 6, true ], [ 7, true ], [ 7, true ], [128X[104X
    [4X[28X  [ 4, true ], [ 4, true ], [ 4, true ], [ 4, true ] ][128X[104X
    [4X[25Xgap>[125X [27XAllUmbrellaDescriptorsOfDegreeSequence( ds );[127X[104X
    [4X[28X[ [ (1,2,5,6,3), (1,2,7,4), (1,3,8,4), (2,5,9,10,11,7), (3,6,12,13,14,8), [128X[104X
    [4X[28X      (4,7,11,15,16,14,8), (5,6,12,9), (9,10,17,18,13,12), [128X[104X
    [4X[28X      (10,11,15,19,20,21,17), (13,14,16,22,23,24,18), (15,16,22,19), [128X[104X
    [4X[28X      (17,18,24,21), (19,20,23,22), (20,21,24,23) ] ][128X[104X
  [4X[32X[104X
  
  
  [1X4.5 [33X[0;0YConstructing surfaces via their Dress Group[133X[101X
  
  [33X[0;0YIn  some  constructions a surface may arrise from the knowledge of its Dress
  Group, see Section [14X22.2[114X. In this case, the surface can be reconstructed from
  its Dress group [22XD = ⟨ θ_0, θ_1, θ_2⟩[122X by computing the orbits of the dihedral
  subgroups  [22XD_0  =  ⟨  θ_1, θ_2⟩[122X, [22XD_1 = ⟨ θ_0, θ_2⟩[122X, [22XD_2 = ⟨ θ_0, θ_1⟩[122X, where
  [23X\theta_0,  \theta_1,  \theta_2[123X  are  the  Dress  Involutions, see [14X22.2-1[114X. In
  particular,  the  vertices  correspond  to  the  orbits  of  [22XD_0[122X,  the edges
  correspond  to the orbits of [22XD_1[122X, the faces correspond to the orbits of [22XD_2[122X,
  and incidence is given by non-empty set-intersection.[133X
  
  [1X4.5-1 SimplicialSurfaceByDressGroup[101X
  
  [33X[1;0Y[29X[2XSimplicialSurfaceByDressGroup[102X( [3Xdress[103X ) [32X operation[133X
  [6XReturns:[106X  [33X[0;10Ya simplicial surface or false[133X
  
  [33X[0;0YThis  method  takes  as  input a permutation group [3Xdress[103X, and tests, whether
  [3Xdress[103X  is the Dress Group of a simplicial surface [3Xsurf[103X, see Section [14X22.2[114X. If
  this is the case, [3Xsurf[103X is constructed and returned.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xtet := Tetrahedron();;[127X[104X
    [4X[25Xgap>[125X [27Xdress := DressGroup(tet);[127X[104X
    [4X[28XGroup([(1,7)(2,8)(3,13)(4,14)(5,19)(6,20)(9,15)(10,16)(11,21)(12,22)(17,23)(18,24), [128X[104X
    [4X[28X  (1,3)(2,5)(4,6)(7,9)(8,11)(10,12)(13,15)(14,18)(16,17)(19,21)(20,24)(22,23), [128X[104X
    [4X[28X  (1,2)(3,4)(5,6)(7,8)(9,10)(11,12)(13,14)(15,16)(17,18)(19,20)(21,22)(23,24) ])[128X[104X
    [4X[25Xgap>[125X [27Xsurf  := SimplicialSurfaceByDressGroup(dress);[127X[104X
    [4X[28Xsimplicial surface (4 vertices, 6 edges, and 4 faces)[128X[104X
    [4X[25Xgap>[125X [27X IsIsomorphic(surf, tet);[127X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  [33X[0;0YIf  the  permutation  group [3Xdress[103X passed as an argument does not satisfy the
  conditions of being a dress group of a surface, [3Xfalse[103X is returned.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XSetInfoLevel(InfoSimplicial,3);[127X[104X
    [4X[25Xgap>[125X [27Xgrp:=Group([(1,2)(3,4)(5,6)(7,8),(1,2)(3,5)(4,7)(6,8),(1,3)(2,4)(5,7)(6,8)]);  [127X[104X
    [4X[28XGroup([ (1,2)(3,4)(5,6)(7,8), (1,2)(3,5)(4,7)(6,8), (1,3)(2,4)(5,7)(6,8) ])[128X[104X
    [4X[25Xgap>[125X [27XSimplicialSurfaceByDressGroup(grp);[127X[104X
    [4X[28X#I  the dress relations are not satisfied.[128X[104X
    [4X[28Xfalse[128X[104X
    [4X[25Xgap>[125X [27Xgens := [ ( 1, 6)( 2, 5)( 3, 4)( 7,12)( 8,11)( 9,10), [127X[104X
    [4X[25X>[125X [27X  ( 1, 8)( 2, 7)( 3,12)( 4, 5)( 6, 9)(10,11), [127X[104X
    [4X[25X>[125X [27X  ( 1,12)( 2,11)( 3,10)( 4, 9)( 5, 8)( 6, 7) ];[127X[104X
    [4X[28X[ (1,6)(2,5)(3,4)(7,12)(8,11)(9,10), (1,8)(2,7)(3,12)(4,5)(6,9)(10,11), [128X[104X
    [4X[28X (1,12)(2,11)(3,10)(4,9)(5,8)(6,7) ][128X[104X
    [4X[25Xgap>[125X [27XSimplicialSurfaceByDressGroup(Group(gens));[127X[104X
    [4X[28X#I  Faces and vertices can have only 2 common flags[128X[104X
    [4X[28Xfalse[128X[104X
  [4X[32X[104X
  
